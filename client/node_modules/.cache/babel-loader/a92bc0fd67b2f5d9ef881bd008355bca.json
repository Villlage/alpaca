{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/createClass\";import BaseService from'./base.service';import{objectToUrlParams}from'../helpers/base';var baseService=new BaseService();var IsaService=/*#__PURE__*/function(){function IsaService(){_classCallCheck(this,IsaService);}_createClass(IsaService,[{key:\"getIsas\",value:function(){var _getIsas=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return baseService.getJSON('isas');case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));function getIsas(){return _getIsas.apply(this,arguments);}return getIsas;}()},{key:\"create\",value:function(){var _create=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(isa){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return baseService.postJSON('isas',isa);case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));function create(_x){return _create.apply(this,arguments);}return create;}()},{key:\"getIsaById\",value:function(){var _getIsaById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(isa_id){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return baseService.getJSON(\"isas/\".concat(isa_id));case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));function getIsaById(_x2){return _getIsaById.apply(this,arguments);}return getIsaById;}()},{key:\"signIsa\",value:function(){var _signIsa=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(isa_id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return baseService.getJSON(\"isas/\".concat(isa_id,\"/sign\"));case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},_callee4);}));function signIsa(_x3){return _signIsa.apply(this,arguments);}return signIsa;}()},{key:\"docusignLogin\",value:function(){var _docusignLogin=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(isa_id){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return baseService.getJSON(\"ds/login?isa_id=\".concat(objectToUrlParams({isa_id:isa_id})));case 2:return _context5.abrupt(\"return\",_context5.sent);case 3:case\"end\":return _context5.stop();}}},_callee5);}));function docusignLogin(_x4){return _docusignLogin.apply(this,arguments);}return docusignLogin;}()}]);return IsaService;}();export{IsaService as default};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/services/isa.service.ts"],"names":["BaseService","objectToUrlParams","baseService","IsaService","getJSON","isa","postJSON","isa_id"],"mappings":"mdAAA,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,OAASC,iBAAT,KAAkC,iBAAlC,CAEA,GAAMC,CAAAA,WAAW,CAAG,GAAIF,CAAAA,WAAJ,EAApB,C,GAEqBG,CAAAA,U,wWAEJD,CAAAA,WAAW,CAACE,OAAZ,CAAoB,MAApB,C,mTAGKC,G,6IAcLH,CAAAA,WAAW,CAACI,QAAZ,CAAqB,MAArB,CAA6BD,GAA7B,C,8TAGSE,M,6IACTL,CAAAA,WAAW,CAACE,OAAZ,gBAA4BG,MAA5B,E,qUAGMA,M,6IACNL,CAAAA,WAAW,CAACE,OAAZ,gBAA4BG,MAA5B,U,wUAGYA,M,6IACZL,CAAAA,WAAW,CAACE,OAAZ,2BAAuCH,iBAAiB,CAAC,CAAEM,MAAM,CAANA,MAAF,CAAD,CAAxD,E,sPA/BIJ,U","sourcesContent":["import BaseService from './base.service'\nimport { IsaClient } from '../interfaces/baseIntefaces'\nimport { objectToUrlParams } from '../helpers/base'\n\nconst baseService = new BaseService()\n\nexport default class IsaService {\n  public async getIsas() {\n    return await baseService.getJSON('isas')\n  }\n\n  public async create(isa: {\n    current_income: number\n    percentage: number\n    cap: number\n    time_to_be_paid: number\n    description: string\n    industry_field: string\n    program_duration_weeks: string\n    cancellation_period_weeks: number\n    coach_id: number\n    client: IsaClient\n    status: string\n    expiration_period_months: string\n  }) {\n    return await baseService.postJSON('isas', isa)\n  }\n\n  public async getIsaById(isa_id: number) {\n    return await baseService.getJSON(`isas/${isa_id}`)\n  }\n\n  public async signIsa(isa_id: number) {\n    return await baseService.getJSON(`isas/${isa_id}/sign`)\n  }\n\n  public async docusignLogin(isa_id: number) {\n    return await baseService.getJSON(`ds/login?isa_id=${objectToUrlParams({ isa_id })}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}