{"ast":null,"code":"import _slicedToArray from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./style.scss';import{NavLink,useHistory}from'react-router-dom';import Icon from'app/components/Icon';var forbiddenRoutes=['register','company/register','company/subscription'];export default function MainNavigation(props){var history=useHistory();var _useState=useState(forbiddenRoutes.some(function(route){return history.location.pathname.includes(route);})),_useState2=_slicedToArray(_useState,2),isHidden=_useState2[0],setIsHidden=_useState2[1];var unListen;useEffect(function(){unListen=history.listen(function(){setIsHidden(forbiddenRoutes.some(function(route){return history.location.pathname.includes(route);}));});return function(){unListen();};},[]);return/*#__PURE__*/React.createElement(\"section\",{className:\"MainNavigation-module \".concat(isHidden&&'hidden')},props.items.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"menuItems\",key:\"menu-items-\".concat(index)},item.label&&/*#__PURE__*/React.createElement(\"div\",{className:\"header\"},item.label),item.subItems.map(function(subItem,index){return/*#__PURE__*/React.createElement(NavLink,{\"aria-disabled\":!subItem.active,key:index,className:\"menuItem\",activeClassName:\"active\",to:subItem.route},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Icon,{icon:subItem.icon})),/*#__PURE__*/React.createElement(\"p\",null,subItem.label));}));}));}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/modules/common/MainNavigation/index.tsx"],"names":["React","useEffect","useState","NavLink","useHistory","Icon","forbiddenRoutes","MainNavigation","props","history","some","route","location","pathname","includes","isHidden","setIsHidden","unListen","listen","items","map","item","index","label","subItems","subItem","active","icon"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAO,cAAP,CACA,OAASC,OAAT,CAAkBC,UAAlB,KAAoC,kBAApC,CACA,MAAOC,CAAAA,IAAP,KAAiB,qBAAjB,CAEA,GAAMC,CAAAA,eAAe,CAAG,CAAC,UAAD,CAAa,kBAAb,CAAiC,sBAAjC,CAAxB,CAaA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAAoD,CACjE,GAAMC,CAAAA,OAAO,CAAGL,UAAU,EAA1B,CADiE,cAGjCF,QAAQ,CAACI,eAAe,CAACI,IAAhB,CAAqB,SAAAC,KAAK,QAAIF,CAAAA,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmCH,KAAnC,CAAJ,EAA1B,CAAD,CAHyB,wCAG1DI,QAH0D,eAGhDC,WAHgD,eAKjE,GAAIC,CAAAA,QAAJ,CACAhB,SAAS,CAAC,UAAM,CACdgB,QAAQ,CAAGR,OAAO,CAACS,MAAR,CAAe,UAAM,CAC9BF,WAAW,CAACV,eAAe,CAACI,IAAhB,CAAqB,SAAAC,KAAK,QAAIF,CAAAA,OAAO,CAACG,QAAR,CAAiBC,QAAjB,CAA0BC,QAA1B,CAAmCH,KAAnC,CAAJ,EAA1B,CAAD,CAAX,CACD,CAFU,CAAX,CAIA,MAAO,WAAM,CACXM,QAAQ,GACT,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CAUA,mBACE,+BAAS,SAAS,iCAA2BF,QAAQ,EAAI,QAAvC,CAAlB,EACGP,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAChC,mBACE,2BAAK,SAAS,CAAC,WAAf,CAA2B,GAAG,sBAAgBA,KAAhB,CAA9B,EACGD,IAAI,CAACE,KAAL,eAAc,2BAAK,SAAS,CAAC,QAAf,EAAyBF,IAAI,CAACE,KAA9B,CADjB,CAEGF,IAAI,CAACG,QAAL,CAAcJ,GAAd,CAAkB,SAACK,OAAD,CAAUH,KAAV,qBACjB,oBAAC,OAAD,EACE,gBAAe,CAACG,OAAO,CAACC,MAD1B,CAEE,GAAG,CAAEJ,KAFP,CAGE,SAAS,CAAC,UAHZ,CAIE,eAAe,CAAC,QAJlB,CAKE,EAAE,CAAEG,OAAO,CAACd,KALd,eAOE,4CACE,oBAAC,IAAD,EAAM,IAAI,CAAEc,OAAO,CAACE,IAApB,EADF,CAPF,cAUE,6BAAIF,OAAO,CAACF,KAAZ,CAVF,CADiB,EAAlB,CAFH,CADF,CAmBD,CApBA,CADH,CADF,CAyBD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './style.scss'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport Icon from 'app/components/Icon'\n\nconst forbiddenRoutes = ['register', 'company/register', 'company/subscription']\n\ntype MenuItem = {\n  label: string\n  route: string\n  icon: string\n  active: boolean\n}\n\ninterface MainNavigationProps {\n  items: Array<{ label: string; subItems: Array<MenuItem> }>\n}\n\nexport default function MainNavigation(props: MainNavigationProps) {\n  const history = useHistory()\n\n  const [isHidden, setIsHidden] = useState(forbiddenRoutes.some(route => history.location.pathname.includes(route)))\n\n  let unListen: Function\n  useEffect(() => {\n    unListen = history.listen(() => {\n      setIsHidden(forbiddenRoutes.some(route => history.location.pathname.includes(route)))\n    })\n\n    return () => {\n      unListen()\n    }\n  }, [])\n\n  return (\n    <section className={`MainNavigation-module ${isHidden && 'hidden'}`}>\n      {props.items.map((item, index) => {\n        return (\n          <div className=\"menuItems\" key={`menu-items-${index}`}>\n            {item.label && <div className=\"header\">{item.label}</div>}\n            {item.subItems.map((subItem, index) => (\n              <NavLink\n                aria-disabled={!subItem.active}\n                key={index}\n                className=\"menuItem\"\n                activeClassName=\"active\"\n                to={subItem.route}\n              >\n                <div>\n                  <Icon icon={subItem.icon as any} />\n                </div>\n                <p>{subItem.label}</p>\n              </NavLink>\n            ))}\n          </div>\n        )\n      })}\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}