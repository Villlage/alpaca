{"ast":null,"code":"export default function buildStyles(_ref){var rotation=_ref.rotation,strokeLinecap=_ref.strokeLinecap,textColor=_ref.textColor,textSize=_ref.textSize,pathColor=_ref.pathColor,pathTransition=_ref.pathTransition,pathTransitionDuration=_ref.pathTransitionDuration,trailColor=_ref.trailColor,backgroundColor=_ref.backgroundColor;var rotationTransform=rotation==null?undefined:\"rotate(\".concat(rotation,\"turn)\");var rotationTransformOrigin=rotation==null?undefined:'center center';return{root:{},path:removeUndefinedValues({stroke:pathColor,strokeLinecap:strokeLinecap,transform:rotationTransform,transformOrigin:rotationTransformOrigin,transition:pathTransition,transitionDuration:pathTransitionDuration==null?undefined:\"\".concat(pathTransitionDuration,\"s\")}),trail:removeUndefinedValues({stroke:trailColor,strokeLinecap:strokeLinecap,transform:rotationTransform,transformOrigin:rotationTransformOrigin}),text:removeUndefinedValues({fill:textColor,fontSize:textSize}),background:removeUndefinedValues({fill:backgroundColor})};}function removeUndefinedValues(obj){Object.keys(obj).forEach(function(key){if(obj[key]==null){delete obj[key];}});return obj;}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/CircularProgressbar/buildStyles.ts"],"names":["buildStyles","rotation","strokeLinecap","textColor","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","backgroundColor","rotationTransform","undefined","rotationTransformOrigin","root","path","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","trail","text","fill","fontSize","background","obj","Object","keys","forEach","key"],"mappings":"AAEA,cAAe,SAASA,CAAAA,WAAT,MAoBe,IAnB5BC,CAAAA,QAmB4B,MAnB5BA,QAmB4B,CAlB5BC,aAkB4B,MAlB5BA,aAkB4B,CAjB5BC,SAiB4B,MAjB5BA,SAiB4B,CAhB5BC,QAgB4B,MAhB5BA,QAgB4B,CAf5BC,SAe4B,MAf5BA,SAe4B,CAd5BC,cAc4B,MAd5BA,cAc4B,CAb5BC,sBAa4B,MAb5BA,sBAa4B,CAZ5BC,UAY4B,MAZ5BA,UAY4B,CAX5BC,eAW4B,MAX5BA,eAW4B,CAC5B,GAAMC,CAAAA,iBAAiB,CAAGT,QAAQ,EAAI,IAAZ,CAAmBU,SAAnB,kBAAyCV,QAAzC,SAA1B,CACA,GAAMW,CAAAA,uBAAuB,CAAGX,QAAQ,EAAI,IAAZ,CAAmBU,SAAnB,CAA+B,eAA/D,CAEA,MAAO,CACLE,IAAI,CAAE,EADD,CAELC,IAAI,CAAEC,qBAAqB,CAAC,CAC1BC,MAAM,CAAEX,SADkB,CAE1BH,aAAa,CAAEA,aAFW,CAG1Be,SAAS,CAAEP,iBAHe,CAI1BQ,eAAe,CAAEN,uBAJS,CAK1BO,UAAU,CAAEb,cALc,CAM1Bc,kBAAkB,CAAEb,sBAAsB,EAAI,IAA1B,CAAiCI,SAAjC,WAAgDJ,sBAAhD,KANM,CAAD,CAFtB,CAULc,KAAK,CAAEN,qBAAqB,CAAC,CAC3BC,MAAM,CAAER,UADmB,CAE3BN,aAAa,CAAEA,aAFY,CAG3Be,SAAS,CAAEP,iBAHgB,CAI3BQ,eAAe,CAAEN,uBAJU,CAAD,CAVvB,CAgBLU,IAAI,CAAEP,qBAAqB,CAAC,CAC1BQ,IAAI,CAAEpB,SADoB,CAE1BqB,QAAQ,CAAEpB,QAFgB,CAAD,CAhBtB,CAoBLqB,UAAU,CAAEV,qBAAqB,CAAC,CAChCQ,IAAI,CAAEd,eAD0B,CAAD,CApB5B,CAAP,CAwBD,CAED,QAASM,CAAAA,qBAAT,CAA+BW,GAA/B,CAA4D,CAC1DC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,OAAjB,CAAyB,SAACC,GAAD,CAAiB,CACxC,GAAIJ,GAAG,CAACI,GAAD,CAAH,EAAY,IAAhB,CAAsB,CACpB,MAAOJ,CAAAA,GAAG,CAACI,GAAD,CAAV,CACD,CACF,CAJD,EAKA,MAAOJ,CAAAA,GAAP,CACD","sourcesContent":["import { CircularProgressbarStyles } from './types'\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number // Number of turns, 0-1\n  strokeLinecap?: any\n  textColor?: string\n  textSize?: string | number\n  pathColor?: string\n  pathTransition?: string\n  pathTransitionDuration?: number // Measured in seconds\n  trailColor?: string\n  backgroundColor?: string\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center'\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  }\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key]\n    }\n  })\n  return obj\n}\n"]},"metadata":{},"sourceType":"module"}