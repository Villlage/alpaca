{"ast":null,"code":"import _slicedToArray from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./style.scss';import React,{useState}from'react';import{fixClass}from'../../../helpers/base';import Icon from'../Icon';export default function Input(props){var _useState=useState(props.type!=='password'),_useState2=_slicedToArray(_useState,2),visible=_useState2[0],set_visible=_useState2[1];var rippled=!!props.value&&props.withRipple;return/*#__PURE__*/React.createElement(\"div\",{className:\"Input-component\".concat(fixClass(props.error&&'has-error')).concat(fixClass(props.className)).concat(fixClass(props.icon&&'with-icon')).concat(fixClass(rippled&&'rippled'))},rippled&&/*#__PURE__*/React.createElement(\"div\",{className:\"ripple\"},props.placeholder),props.icon&&/*#__PURE__*/React.createElement(Icon,{icon:props.icon}),/*#__PURE__*/React.createElement(\"input\",{disabled:props.disabled,type:visible?'text':props.type||'text',onChange:function onChange(e){return props.onChange(e.target.value);},style:props.style,placeholder:props.placeholder,value:props.value}),props.postFix&&/*#__PURE__*/React.createElement(\"div\",{className:\"post-fix\"},props.postFix),props.type==='password'&&/*#__PURE__*/React.createElement(Icon,{className:\"eye-icon\",onClick:function onClick(){return set_visible(!visible);},icon:\"eye\"}),props.error&&props.error.length>0&&/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},props.error));}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Input/index.tsx"],"names":["React","useState","fixClass","Icon","Input","props","type","visible","set_visible","rippled","value","withRipple","error","className","icon","placeholder","disabled","e","onChange","target","style","postFix","length"],"mappings":"sHAAA,MAAO,cAAP,CACA,MAAOA,CAAAA,KAAP,EAA+BC,QAA/B,KAA+C,OAA/C,CACA,OAASC,QAAT,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,IAAP,KAAkC,SAAlC,CAgBA,cAAe,SAASC,CAAAA,KAAT,CAAeC,KAAf,CAAkC,eAChBJ,QAAQ,CAACI,KAAK,CAACC,IAAN,GAAe,UAAhB,CADQ,wCACxCC,OADwC,eAC/BC,WAD+B,eAE/C,GAAMC,CAAAA,OAAO,CAAG,CAAC,CAACJ,KAAK,CAACK,KAAR,EAAiBL,KAAK,CAACM,UAAvC,CACA,mBACE,2BACE,SAAS,0BAAoBT,QAAQ,CAACG,KAAK,CAACO,KAAN,EAAe,WAAhB,CAA5B,SAA2DV,QAAQ,CAACG,KAAK,CAACQ,SAAP,CAAnE,SAAuFX,QAAQ,CAACG,KAAK,CAACS,IAAN,EAAc,WAAf,CAA/F,SAA6HZ,QAAQ,CAACO,OAAO,EAAI,SAAZ,CAArI,CADX,EAGGA,OAAO,eAAI,2BAAK,SAAS,CAAC,QAAf,EAAyBJ,KAAK,CAACU,WAA/B,CAHd,CAIGV,KAAK,CAACS,IAAN,eAAc,oBAAC,IAAD,EAAM,IAAI,CAAET,KAAK,CAACS,IAAlB,EAJjB,cAKE,6BACE,QAAQ,CAAET,KAAK,CAACW,QADlB,CAEE,IAAI,CAAET,OAAO,CAAG,MAAH,CAAYF,KAAK,CAACC,IAAN,EAAc,MAFzC,CAGE,QAAQ,CAAE,kBAAAW,CAAC,QAAIZ,CAAAA,KAAK,CAACa,QAAN,CAAeD,CAAC,CAACE,MAAF,CAAST,KAAxB,CAAJ,EAHb,CAIE,KAAK,CAAEL,KAAK,CAACe,KAJf,CAKE,WAAW,CAAEf,KAAK,CAACU,WALrB,CAME,KAAK,CAAEV,KAAK,CAACK,KANf,EALF,CAaGL,KAAK,CAACgB,OAAN,eAAiB,2BAAK,SAAS,CAAC,UAAf,EAA2BhB,KAAK,CAACgB,OAAjC,CAbpB,CAcGhB,KAAK,CAACC,IAAN,GAAe,UAAf,eAA6B,oBAAC,IAAD,EAAM,SAAS,CAAC,UAAhB,CAA2B,OAAO,CAAE,yBAAME,CAAAA,WAAW,CAAC,CAACD,OAAF,CAAjB,EAApC,CAAiE,IAAI,CAAC,KAAtE,EAdhC,CAeGF,KAAK,CAACO,KAAN,EAAeP,KAAK,CAACO,KAAN,CAAYU,MAAZ,CAAqB,CAApC,eAAyC,yBAAG,SAAS,CAAC,OAAb,EAAsBjB,KAAK,CAACO,KAA5B,CAf5C,CADF,CAmBD","sourcesContent":["import './style.scss'\nimport React, { CSSProperties, useState } from 'react'\nimport { fixClass } from '../../../helpers/base'\nimport Icon, { SystemIcons } from '../Icon'\n\ninterface InputProps {\n  onChange(e: string): void\n  value: string | number\n  placeholder?: string\n  error?: string\n  className?: string\n  postFix?: string\n  icon?: SystemIcons\n  style?: CSSProperties\n  type?: string\n  disabled?: boolean\n  withRipple?: boolean\n}\n\nexport default function Input(props: InputProps) {\n  const [visible, set_visible] = useState(props.type !== 'password')\n  const rippled = !!props.value && props.withRipple\n  return (\n    <div\n      className={`Input-component${fixClass(props.error && 'has-error')}${fixClass(props.className)}${fixClass(props.icon && 'with-icon')}${fixClass(rippled && 'rippled')}`}\n    >\n      {rippled && <div className=\"ripple\">{props.placeholder}</div>}\n      {props.icon && <Icon icon={props.icon} />}\n      <input\n        disabled={props.disabled}\n        type={visible ? 'text' : props.type || 'text'}\n        onChange={e => props.onChange(e.target.value)}\n        style={props.style}\n        placeholder={props.placeholder}\n        value={props.value}\n      />\n      {props.postFix && <div className=\"post-fix\">{props.postFix}</div>}\n      {props.type === 'password' && <Icon className=\"eye-icon\" onClick={() => set_visible(!visible)} icon=\"eye\" />}\n      {props.error && props.error.length > 0 && <p className=\"error\">{props.error}</p>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}