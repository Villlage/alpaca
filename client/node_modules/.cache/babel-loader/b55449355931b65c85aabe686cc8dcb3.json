{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useLayoutEffect,useState}from'react';import Routes from'./Routes';import{Provider}from'react-redux';import store from'./redux/store';import UserService from'./services/user.service';import Loader from'./app/components/Loader';import{log}from'./services/logging.service';import PlaidService from'./services/plaid.service';var configStore=store();var userService=new UserService();var plaidService=new PlaidService();function App(){var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],_setCurrentUser=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),plaid_token=_useState4[0],set_plaid_token=_useState4[1];var fetchUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tokenRes,res,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return plaidService.getToken();case 2:tokenRes=_context.sent;set_plaid_token(tokenRes.link_token);_context.prev=4;_context.next=7;return userService.checkAuth();case 7:res=_context.sent;if(!res){_context.next=15;break;}_context.next=11;return userService.getCurrentUser();case 11:user=_context.sent;return _context.abrupt(\"return\",_setCurrentUser(user));case 15:return _context.abrupt(\"return\",_setCurrentUser(null));case 16:_context.next=22;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](4);log('Error getting current user: ',_context.t0);return _context.abrupt(\"return\",_setCurrentUser(null));case 22:case\"end\":return _context.stop();}}},_callee,null,[[4,18]]);}));return function fetchUser(){return _ref.apply(this,arguments);};}();useLayoutEffect(function(){fetchUser();},[]);return currentUser!==undefined?/*#__PURE__*/React.createElement(Provider,{store:configStore},/*#__PURE__*/React.createElement(Routes,{plaid_token:plaid_token,currentUser:currentUser,fetchUser:fetchUser,setCurrentUser:function setCurrentUser(u){return _setCurrentUser(u);}})):/*#__PURE__*/React.createElement(Loader,null);}export default App;","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/App.tsx"],"names":["React","useLayoutEffect","useState","Routes","Provider","store","UserService","Loader","log","PlaidService","configStore","userService","plaidService","App","undefined","currentUser","setCurrentUser","plaid_token","set_plaid_token","fetchUser","getToken","tokenRes","link_token","checkAuth","res","getCurrentUser","user","u"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,EAAgBC,eAAhB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,GAAT,KAAoB,4BAApB,CAEA,MAAOC,CAAAA,YAAP,KAAyB,0BAAzB,CAEA,GAAMC,CAAAA,WAAgB,CAAGL,KAAK,EAA9B,CACA,GAAMM,CAAAA,WAAW,CAAG,GAAIL,CAAAA,WAAJ,EAApB,CACA,GAAMM,CAAAA,YAAY,CAAG,GAAIH,CAAAA,YAAJ,EAArB,CAEA,QAASI,CAAAA,GAAT,EAAe,eACyBX,QAAQ,CAA0BY,SAA1B,CADjC,wCACNC,WADM,eACOC,eADP,8BAE0Bd,QAAQ,CAAC,EAAD,CAFlC,yCAENe,WAFM,eAEOC,eAFP,eAGb,GAAMC,CAAAA,SAAS,0FAAG,+KACOP,CAAAA,YAAY,CAACQ,QAAb,EADP,QACVC,QADU,eAEhBH,eAAe,CAACG,QAAQ,CAACC,UAAV,CAAf,CAFgB,sCAKIX,CAAAA,WAAW,CAACY,SAAZ,EALJ,QAKRC,GALQ,mBAMVA,GANU,iDAOOb,CAAAA,WAAW,CAACc,cAAZ,EAPP,SAONC,IAPM,+CAQLV,eAAc,CAACU,IAAD,CART,0CAULV,eAAc,CAAC,IAAD,CAVT,2FAadR,GAAG,CAAC,8BAAD,aAAH,CAbc,gCAcPQ,eAAc,CAAC,IAAD,CAdP,uEAAH,kBAATG,CAAAA,SAAS,0CAAf,CAkBAlB,eAAe,CAAC,UAAM,CACpBkB,SAAS,GACV,CAFc,CAEZ,EAFY,CAAf,CAIA,MAAOJ,CAAAA,WAAW,GAAKD,SAAhB,cACL,oBAAC,QAAD,EAAU,KAAK,CAAEJ,WAAjB,eACE,oBAAC,MAAD,EAAQ,WAAW,CAAEO,WAArB,CAAkC,WAAW,CAAEF,WAA/C,CAAoE,SAAS,CAAEI,SAA/E,CAA0F,cAAc,CAAE,wBAACQ,CAAD,QAAoBX,CAAAA,eAAc,CAACW,CAAD,CAAlC,EAA1G,EADF,CADK,cAKL,oBAAC,MAAD,MALF,CAOD,CAED,cAAed,CAAAA,GAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport Routes from './Routes'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport UserService from './services/user.service'\nimport Loader from './app/components/Loader'\nimport { log } from './services/logging.service'\nimport { User } from './interfaces/baseIntefaces'\nimport PlaidService from './services/plaid.service'\n\nconst configStore: any = store()\nconst userService = new UserService()\nconst plaidService = new PlaidService()\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<User | null | undefined>(undefined)\n  const [plaid_token, set_plaid_token] = useState('')\n  const fetchUser = async () => {\n    const tokenRes = await plaidService.getToken()\n    set_plaid_token(tokenRes.link_token)\n    try {\n\n      const res = await userService.checkAuth()\n      if (res) {\n        const user = await userService.getCurrentUser()\n        return setCurrentUser(user)\n      } else {\n        return setCurrentUser(null)\n      }\n    } catch (e) {\n      log('Error getting current user: ', e)\n      return setCurrentUser(null)\n    }\n  }\n\n  useLayoutEffect(() => {\n    fetchUser()\n  }, [])\n\n  return currentUser !== undefined ? (\n    <Provider store={configStore}>\n      <Routes plaid_token={plaid_token} currentUser={currentUser as User} fetchUser={fetchUser} setCurrentUser={(u: User | null) => setCurrentUser(u)} />\n    </Provider>\n  ) : (\n    <Loader />\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}