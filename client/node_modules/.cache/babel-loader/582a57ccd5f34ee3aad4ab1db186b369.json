{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/pages/public/client/isa-offer-steps/sign-up/index.tsx\";\nimport React, { useState } from 'react';\nimport './style.scss';\nimport Input from '../../../../../components/Input';\nimport Button from '../../../../../components/Button';\nimport { validateEmail } from '../../../../../../helpers/base';\nimport AuthService from '../../../../../../services/auth.service';\nimport { log } from '../../../../../../services/logging.service';\nimport { emailErrorMessage, passwordLength, passwordMustMatch } from '../../../../../../constants/auth';\nimport Message from '../../../../../components/Message';\nconst authService = new AuthService();\nexport default function ClientIsaSignUp(props) {\n  const [user, set_user] = useState({\n    email: '',\n    password: ''\n  });\n  const [password_confirm, set_password_confirm] = useState('');\n  const [loading, set_loading] = useState(false);\n  const [request_error, set_request_error] = useState('');\n  const [error, set_error] = useState({\n    email: '',\n    password: '',\n    password_confirm: ''\n  });\n\n  const onSubmit = async () => {\n    set_loading(true);\n\n    try {\n      const res = await authService.register(user);\n\n      if (res) {\n        if (res.error) {\n          set_loading(false);\n          set_request_error(res.error);\n          return setTimeout(() => set_request_error(''), 3000);\n        }\n\n        set_loading(false);\n        await props.onNext();\n      }\n    } catch (e) {\n      set_loading(false);\n      log('Error on sign in: ', e);\n      set_request_error(e.error || e.toString);\n      return setTimeout(() => set_request_error(''), 3000);\n    }\n  };\n\n  const notValid = () => Object.values(user).some(i => i === '') || !validateEmail(user.email) || user.password.length < 6 || password_confirm !== user.password;\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ClientIsaSignUp-module\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fields\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"full\",\n    icon: \"mail\",\n    placeholder: \"Email Address *\",\n    error: error.email,\n    value: user.email,\n    onChange: e => {\n      set_error({ ...error,\n        email: ''\n      });\n      set_user({ ...user,\n        email: e\n      });\n      !validateEmail(e) && set_error({ ...error,\n        email: emailErrorMessage\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: \"full\",\n    icon: \"key\",\n    placeholder: \"Password *\",\n    type: \"password\",\n    error: error.password,\n    value: user.password,\n    onChange: e => {\n      set_error({ ...error,\n        password: ''\n      });\n      set_user({ ...user,\n        password: e\n      });\n      e.length < 6 && set_error({ ...error,\n        password: passwordLength\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: \"full\",\n    icon: \"key\",\n    placeholder: \"Confirm your password *\",\n    type: \"password\",\n    error: error.password_confirm,\n    value: password_confirm,\n    onChange: e => {\n      set_error({ ...error,\n        password_confirm: ''\n      });\n      set_password_confirm(e);\n      e !== user.password && set_error({ ...error,\n        password_confirm: passwordMustMatch\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    background: \"MainWarning\",\n    disabled: notValid(),\n    onClick: onSubmit,\n    icon: \"arrow-right\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"NEXT\")), request_error.length > 0 && /*#__PURE__*/React.createElement(Message, {\n    message: request_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 36\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/pages/public/client/isa-offer-steps/sign-up/index.tsx"],"names":["React","useState","Input","Button","validateEmail","AuthService","log","emailErrorMessage","passwordLength","passwordMustMatch","Message","authService","ClientIsaSignUp","props","user","set_user","email","password","password_confirm","set_password_confirm","loading","set_loading","request_error","set_request_error","error","set_error","onSubmit","res","register","setTimeout","onNext","e","toString","notValid","Object","values","some","i","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss'\nimport Input from '../../../../../components/Input'\nimport Button from '../../../../../components/Button'\nimport { validateEmail } from '../../../../../../helpers/base'\nimport AuthService from '../../../../../../services/auth.service'\nimport { log } from '../../../../../../services/logging.service'\nimport { emailErrorMessage, passwordLength, passwordMustMatch } from '../../../../../../constants/auth'\nimport Message from '../../../../../components/Message'\n\nconst authService = new AuthService()\n\ninterface ClientIsaSignUpProps {\n  onNext(): void\n}\n\nexport default function ClientIsaSignUp(props: ClientIsaSignUpProps) {\n  const [user, set_user] = useState({\n    email: '',\n    password: '',\n  })\n\n  const [password_confirm, set_password_confirm] = useState('')\n  const [loading, set_loading] = useState(false)\n  const [request_error, set_request_error] = useState('')\n\n  const [error, set_error] = useState({\n    email: '',\n    password: '',\n    password_confirm: '',\n  })\n\n  const onSubmit = async () => {\n    set_loading(true)\n    try {\n      const res = await authService.register(user)\n\n      if (res) {\n        if (res.error) {\n          set_loading(false)\n          set_request_error(res.error)\n          return setTimeout(() => set_request_error(''), 3000)\n        }\n\n        set_loading(false)\n        await props.onNext()\n      }\n    } catch (e) {\n      set_loading(false)\n      log('Error on sign in: ', e)\n      set_request_error(e.error || e.toString)\n      return setTimeout(() => set_request_error(''), 3000)\n    }\n  }\n\n  const notValid = () =>\n    Object.values(user).some(i => i === '') || !validateEmail(user.email) || user.password.length < 6 || password_confirm !== user.password\n\n  return (\n    <section className=\"ClientIsaSignUp-module\">\n      <div className=\"fields\">\n        <Input\n          className=\"full\"\n          icon=\"mail\"\n          placeholder=\"Email Address *\"\n          error={error.email}\n          value={user.email}\n          onChange={e => {\n            set_error({ ...error, email: '' })\n            set_user({ ...user, email: e })\n            !validateEmail(e) && set_error({ ...error, email: emailErrorMessage })\n          }}\n        />\n        <Input\n          className=\"full\"\n          icon=\"key\"\n          placeholder=\"Password *\"\n          type=\"password\"\n          error={error.password}\n          value={user.password}\n          onChange={e => {\n            set_error({ ...error, password: '' })\n            set_user({ ...user, password: e })\n            e.length < 6 && set_error({ ...error, password: passwordLength })\n          }}\n        />\n        <Input\n          className=\"full\"\n          icon=\"key\"\n          placeholder=\"Confirm your password *\"\n          type=\"password\"\n          error={error.password_confirm}\n          value={password_confirm}\n          onChange={e => {\n            set_error({ ...error, password_confirm: '' })\n            set_password_confirm(e)\n            e !== user.password && set_error({ ...error, password_confirm: passwordMustMatch })\n          }}\n        />\n      </div>\n      <footer>\n        <Button background=\"MainWarning\" disabled={notValid()} onClick={onSubmit} icon=\"arrow-right\" loading={loading}>\n          NEXT\n        </Button>\n      </footer>\n      {request_error.length > 0 && <Message message={request_error} />}\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}