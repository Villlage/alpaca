{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/createClass\";import BaseService from'./base.service';var baseService=new BaseService();var PlaidService=/*#__PURE__*/function(){function PlaidService(){_classCallCheck(this,PlaidService);}_createClass(PlaidService,[{key:\"createItem\",value:function(){var _createItem=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token,meta){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return baseService.postJSON('plaid/items',{public_token:token,metadata:meta});case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));function createItem(_x,_x2){return _createItem.apply(this,arguments);}return createItem;}()}]);return PlaidService;}();export{PlaidService as default};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/services/plaid.service.ts"],"names":["BaseService","baseService","PlaidService","token","meta","postJSON","public_token","metadata"],"mappings":"mdAAA,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CAGA,GAAMC,CAAAA,WAAW,CAAG,GAAID,CAAAA,WAAJ,EAApB,C,GAEqBE,CAAAA,Y,4OAEKC,K,CAAeC,I,wIACxBH,CAAAA,WAAW,CAACI,QAAZ,CAAqB,aAArB,CAAoC,CAC/CC,YAAY,CAAEH,KADiC,CAE/CI,QAAQ,CAAEH,IAFqC,CAApC,C,8OAHIF,Y","sourcesContent":["import BaseService from './base.service'\nimport { PlaidMetadata } from '../interfaces/baseIntefaces'\n\nconst baseService = new BaseService()\n\nexport default class PlaidService {\n\n  public async createItem(token: string, meta: PlaidMetadata) {\n    return await baseService.postJSON('plaid/items', {\n      public_token: token,\n      metadata: meta,\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}