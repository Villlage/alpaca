{"ast":null,"code":"import*as React from'react';import'./style.scss';import{fixClass}from'../../../helpers/base';var Message=function Message(props){if(!props.message)return null;return typeof props.message==='string'?/*#__PURE__*/React.createElement(\"div\",{className:\"Message-component alert\".concat(fixClass(props.static&&'static')),style:props.background?{background:props.background}:{}},props.message):/*#__PURE__*/React.createElement(\"div\",{className:\"Message-component info\".concat(fixClass(props.static&&'static'))},/*#__PURE__*/React.createElement(\"h2\",null,\"Info\"),/*#__PURE__*/React.createElement(\"p\",null,props.message.text),props.onClick&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:props.onClick},\"OK\")));};export default Message;","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Message/index.tsx"],"names":["React","fixClass","Message","props","message","static","background","text","onClick"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,cAAP,CACA,OAASC,QAAT,KAAyB,uBAAzB,CAcA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAyB,CACvC,GAAI,CAACA,KAAK,CAACC,OAAX,CAAoB,MAAO,KAAP,CACpB,MAAO,OAAOD,CAAAA,KAAK,CAACC,OAAb,GAAyB,QAAzB,cACL,2BACE,SAAS,kCAA4BH,QAAQ,CAACE,KAAK,CAACE,MAAN,EAAgB,QAAjB,CAApC,CADX,CAEE,KAAK,CAAEF,KAAK,CAACG,UAAN,CAAmB,CAAEA,UAAU,CAAEH,KAAK,CAACG,UAApB,CAAnB,CAAsD,EAF/D,EAIGH,KAAK,CAACC,OAJT,CADK,cAQL,2BAAK,SAAS,iCAA2BH,QAAQ,CAACE,KAAK,CAACE,MAAN,EAAgB,QAAjB,CAAnC,CAAd,eACE,qCADF,cAEE,6BAAIF,KAAK,CAACC,OAAN,CAAcG,IAAlB,CAFF,CAGGJ,KAAK,CAACK,OAAN,eACC,4CACE,8BAAQ,OAAO,CAAEL,KAAK,CAACK,OAAvB,OADF,CAJJ,CARF,CAkBD,CApBD,CAsBA,cAAeN,CAAAA,OAAf","sourcesContent":["import * as React from 'react'\nimport './style.scss'\nimport { fixClass } from '../../../helpers/base'\n\nexport type MessageType = {\n  type: 'alert' | 'info'\n  text: string\n}\n\ninterface MessageProps {\n  message: MessageType | string\n  background?: string\n  static?: boolean\n  onClick?: () => void\n}\n\nconst Message = (props: MessageProps) => {\n  if (!props.message) return null\n  return typeof props.message === 'string' ? (\n    <div\n      className={`Message-component alert${fixClass(props.static && 'static')}`}\n      style={props.background ? { background: props.background } : {}}\n    >\n      {props.message}\n    </div>\n  ) : (\n    <div className={`Message-component info${fixClass(props.static && 'static')}`}>\n      <h2>Info</h2>\n      <p>{props.message.text}</p>\n      {props.onClick && (\n        <div>\n          <button onClick={props.onClick}>OK</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}