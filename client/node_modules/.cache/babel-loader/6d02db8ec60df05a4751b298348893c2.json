{"ast":null,"code":"import React from'react';import'./style.scss';import{isNumber}from'../../../../helpers/base';import TooltipBadge from'../../../components/TooltipBadge';export default function BoardingField(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"BoardingField-module\"},/*#__PURE__*/React.createElement(TooltipBadge,{label:props.label,tooltip:props.tooltip}),/*#__PURE__*/React.createElement(\"div\",{className:\"input\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:props.value,onChange:function onChange(e){return isNumber(e.target.value)&&props.onChange(Number(e.target.value));}}),/*#__PURE__*/React.createElement(\"span\",null,props.suffix)));}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/modules/on-boarding/BoardingField/index.tsx"],"names":["React","isNumber","TooltipBadge","BoardingField","props","label","tooltip","value","e","target","onChange","Number","suffix"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,cAAP,CACA,OAASC,QAAT,KAAyB,0BAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kCAAzB,CAUA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAAkD,CAC/D,mBACE,2BAAK,SAAS,CAAC,sBAAf,eACE,oBAAC,YAAD,EAAc,KAAK,CAAEA,KAAK,CAACC,KAA3B,CAAkC,OAAO,CAAED,KAAK,CAACE,OAAjD,EADF,cAEE,2BAAK,SAAS,CAAC,OAAf,eACE,6BACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEF,KAAK,CAACG,KAFf,CAGE,QAAQ,CAAE,kBAAAC,CAAC,QAAIP,CAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASF,KAAV,CAAR,EAA4BH,KAAK,CAACM,QAAN,CAAeC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASF,KAAV,CAArB,CAAhC,EAHb,EADF,cAME,gCAAOH,KAAK,CAACQ,MAAb,CANF,CAFF,CADF,CAaD","sourcesContent":["import React from 'react'\nimport './style.scss'\nimport { isNumber } from '../../../../helpers/base'\nimport TooltipBadge from '../../../components/TooltipBadge'\n\ninterface BoardingFieldProps {\n  label: string\n  value: number\n  onChange(e: number): void\n  suffix: string\n  tooltip: string\n}\n\nexport default function BoardingField(props: BoardingFieldProps) {\n  return (\n    <div className=\"BoardingField-module\">\n      <TooltipBadge label={props.label} tooltip={props.tooltip} />\n      <div className=\"input\">\n        <input\n          type=\"text\"\n          value={props.value}\n          onChange={e => isNumber(e.target.value) && props.onChange(Number(e.target.value))}\n        />\n        <span>{props.suffix}</span>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}