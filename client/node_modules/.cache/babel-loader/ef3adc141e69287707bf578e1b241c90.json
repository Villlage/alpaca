{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/createClass\";import BaseService from'./base.service';import{formatEmail}from'../helpers/formattings';var baseService=new BaseService();var AuthService=/*#__PURE__*/function(){function AuthService(){_classCallCheck(this,AuthService);}_createClass(AuthService,[{key:\"register\",value:function(){var _register=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(user){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return baseService.postJSON('register',user);case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));function register(_x){return _register.apply(this,arguments);}return register;}()},{key:\"login\",value:function(){var _login=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return baseService.postJSON('login',{email:formatEmail(user.email),password:user.password});case 2:return _context2.abrupt(\"return\",_context2.sent);case 3:case\"end\":return _context2.stop();}}},_callee2);}));function login(_x2){return _login.apply(this,arguments);}return login;}()},{key:\"signOut\",value:function(){var _signOut=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return baseService.getJSON('logout');case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},_callee3);}));function signOut(){return _signOut.apply(this,arguments);}return signOut;}()}]);return AuthService;}();export{AuthService as default};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/services/auth.service.ts"],"names":["BaseService","formatEmail","baseService","AuthService","user","postJSON","email","password","getJSON"],"mappings":"mdAAA,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CACA,OAASC,WAAT,KAA4B,wBAA5B,CAEA,GAAMC,CAAAA,WAAW,CAAG,GAAIF,CAAAA,WAAJ,EAApB,C,GAOqBG,CAAAA,W,qOACGC,I,wIACLF,CAAAA,WAAW,CAACG,QAAZ,CAAqB,UAArB,CAAiCD,IAAjC,C,sTAGEA,I,6IACJF,CAAAA,WAAW,CAACG,QAAZ,CAAqB,OAArB,CAA8B,CAAEC,KAAK,CAAEL,WAAW,CAACG,IAAI,CAACE,KAAN,CAApB,CAAkCC,QAAQ,CAAEH,IAAI,CAACG,QAAjD,CAA9B,C,mcAIAL,CAAAA,WAAW,CAACM,OAAZ,CAAoB,QAApB,C,kOAVIL,W","sourcesContent":["import BaseService from './base.service'\nimport { formatEmail } from '../helpers/formattings'\n\nconst baseService = new BaseService()\n\ninterface User {\n  email: string\n  password: string\n}\n\nexport default class AuthService {\n  public async register(user: User) {\n      return await baseService.postJSON('register', user)\n  }\n\n  public async login(user: { password: string; email: string }) {\n    return await baseService.postJSON('login', { email: formatEmail(user.email), password: user.password })\n  }\n\n  public async signOut() {\n    return await baseService.getJSON('logout')\n  }\n}\n"]},"metadata":{},"sourceType":"module"}