{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/components/ExpansionPanel/index.tsx\";\nimport React, { useState } from 'react';\nimport './style.scss';\nimport Icon from '../Icon';\nimport { fixClass } from '../../../helpers/base';\nexport default function ExpansionPanel(props) {\n  const [isOpen, set_isOpen] = useState(props.isOpen || false);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ExpansionPanel-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `question${fixClass(isOpen && 'is-open')}`,\n    onClick: () => set_isOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"chevron-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, props.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: `answer${fixClass(isOpen && 'is-open')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, props.content));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/ExpansionPanel/index.tsx"],"names":["React","useState","Icon","fixClass","ExpansionPanel","props","isOpen","set_isOpen","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAQA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AACjE,QAAM,CAACC,MAAD,EAASC,UAAT,IAAuBN,QAAQ,CAACI,KAAK,CAACC,MAAN,IAAgB,KAAjB,CAArC;AACA,sBACE;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,WAAUH,QAAQ,CAACG,MAAM,IAAI,SAAX,CAAsB,EAAzD;AAA4D,IAAA,OAAO,EAAE,MAAMC,UAAU,CAAC,CAACD,MAAF,CAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACG,KAAX,CAFF,CADF,eAKE;AAAK,IAAA,SAAS,EAAG,SAAQL,QAAQ,CAACG,MAAM,IAAI,SAAX,CAAsB,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2DD,KAAK,CAACI,OAAjE,CALF,CADF;AASD","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss'\nimport Icon from '../Icon'\nimport { fixClass } from '../../../helpers/base'\n\ninterface ExpansionPanelProps {\n  title: string\n  content: any\n  isOpen?: boolean\n}\n\nexport default function ExpansionPanel(props: ExpansionPanelProps) {\n  const [isOpen, set_isOpen] = useState(props.isOpen || false)\n  return (\n    <section className=\"ExpansionPanel-component\">\n      <div className={`question${fixClass(isOpen && 'is-open')}`} onClick={() => set_isOpen(!isOpen)}>\n        <Icon icon=\"chevron-right\" />\n        <h2>{props.title}</h2>\n      </div>\n      <div className={`answer${fixClass(isOpen && 'is-open')}`}>{props.content}</div>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}