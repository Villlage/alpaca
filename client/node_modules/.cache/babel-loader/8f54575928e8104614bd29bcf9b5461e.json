{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/App.tsx\";\nimport React, { useLayoutEffect, useState } from 'react';\nimport Routes from './Routes';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport UserService from './services/user.service';\nimport Loader from './app/components/Loader';\nimport { log } from './services/logging.service';\nconst configStore = store();\nconst userService = new UserService();\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const fetchUser = async () => {\n    try {\n      const res = await userService.checkAuth();\n\n      if (res) {\n        const user = await userService.getCurrentUser();\n        return setUser(user);\n      } else {\n        return setUser(undefined);\n      }\n    } catch (e) {\n      log('Error getting current user: ', e); // setUser(undefined)\n\n      return setUser({\n        id: 1,\n        first_name: 'Amy',\n        last_name: 'Owens',\n        phone_number: '555555',\n        user_role: 0,\n        confirmed_at: '',\n        email: 'sample@mail.com',\n        is_active: true,\n        profile_picture: '/assets/images/amy_owens.svg',\n        profile_picture_link: '/assets/images/amy_owens.svg',\n        created_at: '',\n        updated_at: '',\n        hourly_rate: 40\n      });\n    }\n  };\n\n  useLayoutEffect(() => {\n    fetchUser();\n  }, []);\n  return user !== null ? /*#__PURE__*/React.createElement(Provider, {\n    store: configStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    currentUser: user,\n    fetchUser: fetchUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/App.tsx"],"names":["React","useLayoutEffect","useState","Routes","Provider","store","UserService","Loader","log","configStore","userService","App","user","setUser","fetchUser","res","checkAuth","getCurrentUser","undefined","e","id","first_name","last_name","phone_number","user_role","confirmed_at","email","is_active","profile_picture","profile_picture_link","created_at","updated_at","hourly_rate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,GAAT,QAAoB,4BAApB;AAGA,MAAMC,WAAgB,GAAGJ,KAAK,EAA9B;AACA,MAAMK,WAAW,GAAG,IAAIJ,WAAJ,EAApB;;AAEA,SAASK,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAA0B,IAA1B,CAAhC;;AACA,QAAMY,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAML,WAAW,CAACM,SAAZ,EAAlB;;AACA,UAAID,GAAJ,EAAS;AACP,cAAMH,IAAI,GAAG,MAAMF,WAAW,CAACO,cAAZ,EAAnB;AACA,eAAOJ,OAAO,CAACD,IAAD,CAAd;AACD,OAHD,MAGO;AACL,eAAOC,OAAO,CAACK,SAAD,CAAd;AACD;AACF,KARD,CAQE,OAAOC,CAAP,EAAU;AACVX,MAAAA,GAAG,CAAC,8BAAD,EAAiCW,CAAjC,CAAH,CADU,CAEV;;AACA,aAAON,OAAO,CAAC;AACbO,QAAAA,EAAE,EAAE,CADS;AAEbC,QAAAA,UAAU,EAAE,KAFC;AAGbC,QAAAA,SAAS,EAAE,OAHE;AAIbC,QAAAA,YAAY,EAAE,QAJD;AAKbC,QAAAA,SAAS,EAAE,CALE;AAMbC,QAAAA,YAAY,EAAE,EAND;AAObC,QAAAA,KAAK,EAAE,iBAPM;AAQbC,QAAAA,SAAS,EAAE,IARE;AASbC,QAAAA,eAAe,EAAE,8BATJ;AAUbC,QAAAA,oBAAoB,EAAE,8BAVT;AAWbC,QAAAA,UAAU,EAAE,EAXC;AAYbC,QAAAA,UAAU,EAAE,EAZC;AAabC,QAAAA,WAAW,EAAE;AAbA,OAAD,CAAd;AAeD;AACF,GA5BD;;AA8BA/B,EAAAA,eAAe,CAAC,MAAM;AACpBa,IAAAA,SAAS;AACV,GAFc,EAEZ,EAFY,CAAf;AAIA,SAAOF,IAAI,KAAK,IAAT,gBACL,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAEG,IAArB;AAA2B,IAAA,SAAS,EAAEE,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,gBAKL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF;AAOD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport Routes from './Routes'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport UserService from './services/user.service'\nimport Loader from './app/components/Loader'\nimport { log } from './services/logging.service'\nimport { User } from './interfaces/baseIntefaces'\n\nconst configStore: any = store()\nconst userService = new UserService()\n\nfunction App() {\n  const [user, setUser] = useState<User | null | undefined>(null)\n  const fetchUser = async () => {\n    try {\n      const res = await userService.checkAuth()\n      if (res) {\n        const user = await userService.getCurrentUser()\n        return setUser(user)\n      } else {\n        return setUser(undefined)\n      }\n    } catch (e) {\n      log('Error getting current user: ', e)\n      // setUser(undefined)\n      return setUser({\n        id: 1,\n        first_name: 'Amy',\n        last_name: 'Owens',\n        phone_number: '555555',\n        user_role: 0,\n        confirmed_at: '',\n        email: 'sample@mail.com',\n        is_active: true,\n        profile_picture: '/assets/images/amy_owens.svg',\n        profile_picture_link: '/assets/images/amy_owens.svg',\n        created_at: '',\n        updated_at: '',\n        hourly_rate: 40\n      })\n    }\n  }\n\n  useLayoutEffect(() => {\n    fetchUser()\n  }, [])\n\n  return user !== null ? (\n    <Provider store={configStore}>\n      <Routes currentUser={user} fetchUser={fetchUser} />\n    </Provider>\n  ) : (\n    <Loader />\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}