{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/modules/on-boarding/ISACalculator/index.tsx\";\nimport React, { useState } from 'react';\nimport './style.scss';\nimport Icon from '../../../components/Icon';\nimport { embedCalculator } from '../../../../helpers/base';\nimport Message from '../../../components/Message';\nimport { SYSTEM_COLORS } from '../../../../constants/system';\nexport default function ISACalculator(props) {\n  const [copied_to_clipboard, set_copied_to_clipboard] = useState(false);\n  const [current_income, set_current_income] = useState(95);\n  const [future_income, set_future_income] = useState(125);\n\n  const future_bill = () => {\n    let bill = props.percentage / 100 * future_income * (props.months / 12);\n\n    if (future_income > props.max) {\n      bill = props.max;\n    }\n\n    if (bill > current_income) {\n      bill = 0;\n    }\n\n    if (future_income < current_income) {\n      bill = 0;\n    }\n\n    return Math.round(bill);\n  };\n\n  const handleCopy = () => {\n    embedCalculator(props.percentage, props.months, props.max, current_income, future_income);\n    set_copied_to_clipboard(true);\n    return setTimeout(() => set_copied_to_clipboard(false), 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"ISACalculator-module\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"ISA Calculator\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"current income\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"$\", current_income, \"K / YEAR\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"future income\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"$\", future_income, \"K / YEAR\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => set_current_income(Number(e.target.value)),\n    className: \"line\",\n    value: current_income,\n    min: 0,\n    max: 200,\n    step: 1,\n    type: \"range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => set_future_income(Number(e.target.value)),\n    className: \"line\",\n    id: \"future_amount\",\n    value: future_income,\n    min: 0,\n    max: 200,\n    step: 1,\n    type: \"range\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"future-bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Future Bill\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"$\", future_bill(), \"K / YEAR (\", props.percentage, \"%)\")))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Embed this calculator in your website:\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), \"copy code\")), copied_to_clipboard && /*#__PURE__*/React.createElement(Message, {\n    message: \"Copied to clipboard!\",\n    background: SYSTEM_COLORS.MainSuccess,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 31\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/modules/on-boarding/ISACalculator/index.tsx"],"names":["React","useState","Icon","embedCalculator","Message","SYSTEM_COLORS","ISACalculator","props","copied_to_clipboard","set_copied_to_clipboard","current_income","set_current_income","future_income","set_future_income","future_bill","bill","percentage","months","max","Math","round","handleCopy","setTimeout","textAlign","e","Number","target","value","MainSuccess"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss'\nimport Icon from '../../../components/Icon'\nimport { embedCalculator } from '../../../../helpers/base'\nimport Message from '../../../components/Message'\nimport { SYSTEM_COLORS } from '../../../../constants/system'\n\ninterface ISACalculatorProps {\n  percentage: number\n  months: number\n  max: number\n}\n\nexport default function ISACalculator(props: ISACalculatorProps) {\n  const [copied_to_clipboard, set_copied_to_clipboard] = useState(false)\n  const [current_income, set_current_income] = useState(95)\n  const [future_income, set_future_income] = useState(125)\n\n  const future_bill = () => {\n    let bill = ((props.percentage / 100) * future_income) * (props.months / 12)\n\n    if (future_income > props.max) {\n      bill = props.max\n    }\n\n    if (bill > current_income) {\n      bill = 0\n    }\n\n    if (future_income < current_income) {\n      bill = 0\n    }\n\n    return Math.round(bill)\n  }\n\n  const handleCopy = () => {\n    embedCalculator(props.percentage, props.months, props.max, current_income, future_income)\n    set_copied_to_clipboard(true)\n    return setTimeout(() => set_copied_to_clipboard(false), 2000)\n  }\n\n  return (\n    <section className=\"ISACalculator-module\">\n      <header>\n        <h2>ISA Calculator</h2>\n      </header>\n\n      <div className=\"body\">\n        <div className=\"slider-wrapper\">\n          <div className=\"titles\">\n            <div>\n              <h2>current income</h2>\n              <p>${current_income}K / YEAR</p>\n            </div>\n            <div style={{ textAlign: 'right' }}>\n              <h2>future income</h2>\n              <p>${future_income}K / YEAR</p>\n            </div>\n          </div>\n\n          <section className=\"slider\">\n            <input onChange={e => set_current_income(Number(e.target.value))} className=\"line\" value={current_income} min={0} max={200} step={1} type=\"range\" />\n            <input onChange={e => set_future_income(Number(e.target.value))} className=\"line\" id=\"future_amount\" value={future_income} min={0} max={200} step={1} type=\"range\" />\n          </section>\n\n          <div className=\"future-bill\">\n            <label>Future Bill</label>\n            <p>${future_bill()}K / YEAR ({props.percentage}%)</p>\n          </div>\n        </div>\n      </div>\n      <footer>\n        <p>Embed this calculator in your website:</p>\n        <button onClick={handleCopy}>\n          <Icon icon=\"code\" />\n          copy code\n        </button>\n      </footer>\n      {copied_to_clipboard && <Message message=\"Copied to clipboard!\" background={SYSTEM_COLORS.MainSuccess} />}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}