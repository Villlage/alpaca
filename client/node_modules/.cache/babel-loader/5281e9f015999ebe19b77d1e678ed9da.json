{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import currentEnv from'../config/environment';import{objectToUrlParams}from'../helpers/base';import{log}from'./logging.service';var BaseService=function BaseService(){var _this=this;_classCallCheck(this,BaseService);this.MAIN_API=currentEnv().MAIN_API;this.handleError=function(res){if(typeof res.error==='string')return res;var values=Object.values(res.error);var keys=Object.keys(res.error);var err={error:keys.map(function(key,i){var message=Array.isArray(values[i])?values[i].join(', '):Object.values(values[i]).join(', ');return key+': '+message;}).join('\\n')};log('Error in handleError method in BaseService',err);return err;};this.handleResponseType=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var contentType;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:contentType=res.headers.get('content-type');if(!(contentType&&contentType.indexOf('application/json')!==-1)){_context.next=7;break;}_context.next=4;return res.json();case 4:return _context.abrupt(\"return\",_context.sent);case 7:_context.t0=log;_context.next=10;return res.text();case 10:_context.t1=_context.sent;(0,_context.t0)('Received type is not JSON but *: ',_context.t1);return _context.abrupt(\"return\",null);case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();this.headers=function(){return{'Content-Type':'application/json','Access-Control-Allow-Headers':'*'};};this.getJSON=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(url,params){var res,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(_this.MAIN_API+url+\"\".concat(objectToUrlParams(params)),{method:'GET',headers:_this.headers(),credentials:'include'});case 2:res=_context2.sent;_context2.next=5;return _this.handleResponseType(res);case 5:response=_context2.sent;if(!(response&&response.error)){_context2.next=8;break;}return _context2.abrupt(\"return\",_this.handleError(response));case 8:return _context2.abrupt(\"return\",response);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2,_x3){return _ref2.apply(this,arguments);};}();this.postJSON=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(url,data,saveCookie){var res,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(_this.MAIN_API+url,{method:'POST',headers:_this.headers(),body:JSON.stringify(data),credentials:'include'});case 3:res=_context3.sent;if(saveCookie){log(res);}_context3.next=7;return _this.handleResponseType(res);case 7:response=_context3.sent;if(!(response&&response.error)){_context3.next=10;break;}return _context3.abrupt(\"return\",_this.handleError(response));case 10:return _context3.abrupt(\"return\",response);case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);log('Error doing postJSON in base.service.ts: ',_context3.t0);throw _context3.t0;case 17:case\"end\":return _context3.stop();}}},_callee3,null,[[0,13]]);}));return function(_x4,_x5,_x6){return _ref3.apply(this,arguments);};}();this.patchJSON=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(url,data){var res,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(_this.MAIN_API+url,{method:'PATCH',headers:_this.headers(),body:JSON.stringify(data),credentials:'include'});case 3:res=_context4.sent;_context4.next=6;return _this.handleResponseType(res);case 6:response=_context4.sent;if(!(response&&response.error&&typeof response.error==='object')){_context4.next=9;break;}return _context4.abrupt(\"return\",_this.handleError(response));case 9:return _context4.abrupt(\"return\",response);case 12:_context4.prev=12;_context4.t0=_context4[\"catch\"](0);log('Error doing patchJSON in base.service.ts: ',_context4.t0);throw _context4.t0;case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[0,12]]);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}();this.deleteJSON=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(url,data){var res,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return fetch(_this.MAIN_API+url,{method:'DELETE',headers:_this.headers(),body:JSON.stringify(data),credentials:'include'});case 3:res=_context5.sent;_context5.next=6;return _this.handleResponseType(res);case 6:response=_context5.sent;if(!(response&&response.error&&typeof response.error==='object')){_context5.next=9;break;}return _context5.abrupt(\"return\",_this.handleError(response));case 9:return _context5.abrupt(\"return\",response);case 12:_context5.prev=12;_context5.t0=_context5[\"catch\"](0);log('Error doing patchJSON in base.service.ts: ',_context5.t0);throw _context5.t0;case 16:case\"end\":return _context5.stop();}}},_callee5,null,[[0,12]]);}));return function(_x9,_x10){return _ref5.apply(this,arguments);};}();this.postFormData=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(url,data,method){var res,response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return fetch(_this.MAIN_API+url,{method:method||'post',credentials:'include',body:data});case 3:res=_context6.sent;_context6.next=6;return _this.handleResponseType(res);case 6:response=_context6.sent;if(!(response&&response.error)){_context6.next=9;break;}return _context6.abrupt(\"return\",_this.handleError(response));case 9:return _context6.abrupt(\"return\",response);case 12:_context6.prev=12;_context6.t0=_context6[\"catch\"](0);log('Error doing postFormData in base.service.ts: ',_context6.t0);throw _context6.t0;case 16:case\"end\":return _context6.stop();}}},_callee6,null,[[0,12]]);}));return function(_x11,_x12,_x13){return _ref6.apply(this,arguments);};}();};export{BaseService as default};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/services/base.service.ts"],"names":["currentEnv","objectToUrlParams","log","BaseService","MAIN_API","handleError","res","error","values","Object","keys","err","map","key","i","message","Array","isArray","join","handleResponseType","contentType","headers","get","indexOf","json","text","getJSON","url","params","fetch","method","credentials","response","postJSON","data","saveCookie","body","JSON","stringify","patchJSON","deleteJSON","postFormData"],"mappings":"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","sourcesContent":["import currentEnv from '../config/environment'\nimport { objectToUrlParams } from '../helpers/base'\nimport { log } from './logging.service'\n\ntype PostAPIs = 'register' | 'login' | 'user' | 'isas' | 'plaid/items'\n\ntype PatchAPIs = 'register' | 'login' | 'user' | string\n\ntype GetAPIs = 'logout' | 'user' | 'check-auth' | string\n\nexport default class BaseService {\n  public MAIN_API = currentEnv().MAIN_API\n\n  private handleError = (res: { error: { any: string[] } | string }) => {\n    if (typeof res.error === 'string') return res\n    const values = Object.values(res.error)\n    const keys = Object.keys(res.error)\n    const err = {\n      error: keys\n        .map((key, i) => {\n          const message = Array.isArray(values[i]) ? values[i].join(', ') : Object.values(values[i]).join(', ')\n          return key + ': ' + message\n        })\n        .join('\\n'),\n    }\n    log('Error in handleError method in BaseService', err)\n    return err\n  }\n\n  // check if type of response is JSON\n  private handleResponseType = async (res: Response) => {\n    const contentType = res.headers.get('content-type')\n    if (contentType && contentType.indexOf('application/json') !== -1) {\n      return await res.json()\n    } else {\n      log('Received type is not JSON but *: ', await res.text())\n      return null\n    }\n  }\n\n  // define request headers\n  private headers = () => {\n    return {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Headers': '*',\n    }\n  }\n\n  getJSON = async (url: GetAPIs, params?: object) => {\n    const res = await fetch(this.MAIN_API + url + `${objectToUrlParams(params)}`, {\n      method: 'GET',\n      headers: this.headers(),\n      credentials: 'include',\n    })\n    const response = await this.handleResponseType(res)\n    if (response && response.error) {\n      return this.handleError(response)\n    }\n    return response\n  }\n\n  postJSON = async (url: PostAPIs, data: any, saveCookie?: boolean) => {\n    try {\n      const res = await fetch(this.MAIN_API + url, {\n        method: 'POST',\n        headers: this.headers(),\n        body: JSON.stringify(data),\n        credentials: 'include',\n      })\n\n      if (saveCookie) {\n        log(res)\n      }\n\n      const response = await this.handleResponseType(res)\n      if (response && response.error) {\n        return this.handleError(response)\n      }\n      return response\n    } catch (e) {\n      log('Error doing postJSON in base.service.ts: ', e)\n      throw e\n    }\n  }\n\n  patchJSON = async (url: PatchAPIs, data: any) => {\n    try {\n      const res = await fetch(this.MAIN_API + url, {\n        method: 'PATCH',\n        headers: this.headers(),\n        body: JSON.stringify(data),\n        credentials: 'include',\n      })\n      const response = await this.handleResponseType(res)\n      if (response && response.error && typeof response.error === 'object') {\n        return this.handleError(response)\n      }\n      return response\n    } catch (e) {\n      log('Error doing patchJSON in base.service.ts: ', e)\n      throw e\n    }\n  }\n\n  deleteJSON = async (url: string, data: any) => {\n    try {\n      const res = await fetch(this.MAIN_API + url, {\n        method: 'DELETE',\n        headers: this.headers(),\n        body: JSON.stringify(data),\n        credentials: 'include',\n      })\n      const response = await this.handleResponseType(res)\n      if (response && response.error && typeof response.error === 'object') {\n        return this.handleError(response)\n      }\n      return response\n    } catch (e) {\n      log('Error doing patchJSON in base.service.ts: ', e)\n      throw e\n    }\n  }\n\n  postFormData = async (url: string, data: FormData, method?: 'post' | 'patch') => {\n    try {\n      const res = await fetch(this.MAIN_API + url, {\n        method: method || 'post',\n        credentials: 'include',\n        body: data,\n      })\n      const response = await this.handleResponseType(res)\n      if (response && response.error) {\n        return this.handleError(response)\n      }\n      return response\n    } catch (e) {\n      log('Error doing postFormData in base.service.ts: ', e)\n      throw e\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}