{"ast":null,"code":"import _slicedToArray from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from'react';import'./style.scss';import{useState}from'react';import{notEmptyArray,fixClass}from'../../../helpers/base';import Icon from'../Icon';export default function Select(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showOptions=_useState2[0],setShowOptions=_useState2[1];var isError=props.error&&props.error.length>0;return/*#__PURE__*/React.createElement(\"div\",{className:\"Select-component\".concat(fixClass(isError&&'has-error')).concat(fixClass(props.disabled&&'disabled'))},props.label&&/*#__PURE__*/React.createElement(\"label\",null,props.label),/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return!props.disabled&&setShowOptions(!showOptions);},className:\"placeholder \".concat(!!props.value?'value':'')},props.icon&&/*#__PURE__*/React.createElement(Icon,{className:\"selected-icon\",icon:props.icon}),/*#__PURE__*/React.createElement(\"div\",{className:\"select-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ripple\".concat(fixClass(!!props.value&&'focused'))},props.placeholder),props.value||props.placeholder),/*#__PURE__*/React.createElement(Icon,{style:{marginLeft:8},className:\"caret_down\",icon:\"select_down\"}),showOptions&&notEmptyArray(props.options)&&/*#__PURE__*/React.createElement(\"div\",{className:\"options\"},props.options.map(function(option,index){return/*#__PURE__*/React.createElement(\"div\",{className:\"option\".concat(fixClass(option===props.value&&'selected')),key:index,onClick:function onClick(){setShowOptions(false);props.onChange(option);}},option);}))),showOptions&&/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return setShowOptions(!showOptions);},className:\"overlay\"}),isError&&/*#__PURE__*/React.createElement(\"p\",{className:\"error\"},props.error));}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Select/Select.tsx"],"names":["React","useState","notEmptyArray","fixClass","Icon","Select","props","showOptions","setShowOptions","isError","error","length","disabled","label","value","icon","placeholder","marginLeft","options","map","option","index","onChange"],"mappings":"sHAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,cAAP,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,aAAT,CAAwBC,QAAxB,KAAwC,uBAAxC,CACA,MAAOC,CAAAA,IAAP,KAAkC,SAAlC,CAaA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAoC,eACXL,QAAQ,CAAC,KAAD,CADG,wCAC1CM,WAD0C,eAC7BC,cAD6B,eAEjD,GAAMC,CAAAA,OAAO,CAAGH,KAAK,CAACI,KAAN,EAAeJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAqB,CAApD,CACA,mBACE,2BAAK,SAAS,2BAAqBR,QAAQ,CAACM,OAAO,EAAI,WAAZ,CAA7B,SAAwDN,QAAQ,CAACG,KAAK,CAACM,QAAN,EAAkB,UAAnB,CAAhE,CAAd,EACGN,KAAK,CAACO,KAAN,eAAe,iCAAQP,KAAK,CAACO,KAAd,CADlB,cAEE,2BACE,OAAO,CAAE,yBAAM,CAACP,KAAK,CAACM,QAAP,EAAmBJ,cAAc,CAAC,CAACD,WAAF,CAAvC,EADX,CAEE,SAAS,uBAAiB,CAAC,CAACD,KAAK,CAACQ,KAAR,CAAgB,OAAhB,CAA0B,EAA3C,CAFX,EAIGR,KAAK,CAACS,IAAN,eAAc,oBAAC,IAAD,EAAM,SAAS,CAAC,eAAhB,CAAgC,IAAI,CAAET,KAAK,CAACS,IAA5C,EAJjB,cAME,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,SAAS,iBAAWZ,QAAQ,CAAC,CAAC,CAACG,KAAK,CAACQ,KAAR,EAAiB,SAAlB,CAAnB,CAAd,EAAkER,KAAK,CAACU,WAAxE,CADF,CAEGV,KAAK,CAACQ,KAAN,EAAeR,KAAK,CAACU,WAFxB,CANF,cAUE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,UAAU,CAAE,CAAd,CAAb,CAAgC,SAAS,CAAC,YAA1C,CAAuD,IAAI,CAAC,aAA5D,EAVF,CAWGV,WAAW,EAAIL,aAAa,CAACI,KAAK,CAACY,OAAP,CAA5B,eACC,2BAAK,SAAS,CAAC,SAAf,EACGZ,KAAK,CAACY,OAAN,CAAeC,GAAf,CAAmB,SAACC,MAAD,CAASC,KAAT,qBAClB,2BACE,SAAS,iBAAWlB,QAAQ,CAACiB,MAAM,GAAKd,KAAK,CAACQ,KAAjB,EAA0B,UAA3B,CAAnB,CADX,CAEE,GAAG,CAAEO,KAFP,CAGE,OAAO,CAAE,kBAAM,CACbb,cAAc,CAAC,KAAD,CAAd,CACAF,KAAK,CAACgB,QAAN,CAAeF,MAAf,EACD,CANH,EAQGA,MARH,CADkB,EAAnB,CADH,CAZJ,CAFF,CA+BGb,WAAW,eAAI,2BAAK,OAAO,CAAE,yBAAMC,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAd,CAAkD,SAAS,CAAC,SAA5D,EA/BlB,CAgCGE,OAAO,eAAI,yBAAG,SAAS,CAAC,OAAb,EAAsBH,KAAK,CAACI,KAA5B,CAhCd,CADF,CAoCD","sourcesContent":["import * as React from 'react'\nimport './style.scss'\nimport { useState } from 'react'\nimport { notEmptyArray, fixClass } from '../../../helpers/base'\nimport Icon, { SystemIcons } from '../Icon'\n\ninterface SelectProps {\n  value: string\n  options: string[] | null | undefined\n  onChange(option: string): void\n  placeholder: string\n  label?: string\n  error?: string\n  disabled?: boolean\n  icon?: SystemIcons\n}\n\nexport default function Select(props: SelectProps) {\n  const [showOptions, setShowOptions] = useState(false)\n  const isError = props.error && props.error.length > 0\n  return (\n    <div className={`Select-component${fixClass(isError && 'has-error')}${fixClass(props.disabled && 'disabled')}`}>\n      {props.label && <label>{props.label}</label>}\n      <div\n        onClick={() => !props.disabled && setShowOptions(!showOptions)}\n        className={`placeholder ${!!props.value ? 'value' : ''}`}\n      >\n        {props.icon && <Icon className=\"selected-icon\" icon={props.icon} />}\n\n        <div className=\"select-container\">\n          <div className={`ripple${fixClass(!!props.value && 'focused')}`}>{props.placeholder}</div>\n          {props.value || props.placeholder}\n        </div>\n        <Icon style={{ marginLeft: 8 }} className=\"caret_down\" icon=\"select_down\" />\n        {showOptions && notEmptyArray(props.options) && (\n          <div className=\"options\">\n            {props.options!.map((option, index) => (\n              <div\n                className={`option${fixClass(option === props.value && 'selected')}`}\n                key={index}\n                onClick={() => {\n                  setShowOptions(false)\n                  props.onChange(option)\n                }}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {showOptions && <div onClick={() => setShowOptions(!showOptions)} className=\"overlay\" />}\n      {isError && <p className=\"error\">{props.error}</p>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}