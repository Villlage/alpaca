{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/pages/public/company/my-isa/create-isa/index.tsx\";\nimport './style.scss';\nimport PageHeader from '../../../../../modules/common/PageHeader';\nimport PageContent from '../../../../../modules/common/PageContent';\nimport FAQ from '../../../../../modules/company/CreateIsa/FAQ';\nimport React, { useState } from 'react';\nimport { fixClass, isNumber, validateEmail } from '../../../../../../helpers/base';\nimport Input from '../../../../../components/Input';\nimport TooltipBadge from '../../../../../components/TooltipBadge';\nimport { emailErrorMessage } from '../../../../../../constants/auth';\nimport Button from '../../../../../components/Button';\nimport IsaService from '../../../../../../services/isa.service';\nimport Message from '../../../../../components/Message';\nimport IsaAssessment from '../../../../../modules/common/IsaAssessment';\nconst isaService = new IsaService();\nconst pricing = ['From total income', 'From new raise', 'Placement'];\nexport default function CreateIsa(props) {\n  const [loading, set_loading] = useState(false);\n  const [request_error, set_request_error] = useState('');\n  const [selected_pricing, set_selected_pricing] = useState(pricing[0]);\n  const [client, set_client] = useState({\n    email: '',\n    first_name: '',\n    last_name: ''\n  });\n  const [error, set_error] = useState({\n    email: '',\n    first_name: '',\n    last_name: ''\n  });\n  const [total_income, set_total_income] = useState({\n    description: '',\n    percentage: '',\n    months: '',\n    maximum: '',\n    cancellation_period: '',\n    risk: '',\n    current_income: ''\n  });\n\n  const setIncome = (e, key) => set_total_income({ ...total_income,\n    [key]: e\n  });\n\n  const notValid = () => Object.values(client).some(i => i === '') || Object.values(total_income).some(i => i === '') || !validateEmail(client.email);\n\n  const sendOffer = async () => {\n    set_loading(true);\n\n    try {\n      const res = await isaService.create({\n        current_income: Number(total_income.current_income),\n        percentage: Number(total_income.percentage),\n        cap: Number(total_income.cancellation_period),\n        time_to_be_paid: Number(total_income.months),\n        status: 'created',\n        description: total_income.description,\n        client,\n        coach_id: props.currentUser.id\n      });\n\n      if (res && res.error) {\n        set_loading(false);\n        set_request_error(res.error);\n        return setTimeout(() => set_request_error(''), 3000);\n      }\n\n      set_loading(false);\n    } catch (e) {\n      set_loading(false);\n      set_request_error(e.error || e.toString());\n      setTimeout(() => set_request_error(''), 3000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"CreateIsa-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageHeader, {\n    user: props.currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PageContent, {\n    title: \"New ISA Offer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"client-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Client Information\"), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    onChange: e => set_client({ ...client,\n      first_name: e\n    }),\n    value: client.first_name,\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    onChange: e => set_client({ ...client,\n      last_name: e\n    }),\n    value: client.last_name,\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    className: \"email\",\n    error: error.email,\n    onChange: e => {\n      set_error({ ...error,\n        email: ''\n      });\n      set_client({ ...client,\n        email: e\n      });\n      !validateEmail(e) && set_error({ ...error,\n        email: emailErrorMessage\n      });\n    },\n    value: client.email,\n    placeholder: \"Email Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, \"Offer Details\"), /*#__PURE__*/React.createElement(TooltipBadge, {\n    label: \"Pricing\",\n    tooltip: \"help text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"selects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, pricing.map((item, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    className: `${fixClass(selected_pricing === item && 'selected')}`,\n    onClick: () => set_selected_pricing(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    onChange: e => setIncome(e, 'description'),\n    placeholder: \"Description\",\n    value: total_income.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), selected_pricing === 'From total income' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"%\",\n    onChange: e => isNumber(e) && setIncome(e, 'current_income'),\n    placeholder: \"Current income\",\n    value: total_income.current_income,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"%\",\n    onChange: e => isNumber(e) && setIncome(e, 'percentage'),\n    placeholder: \"Percentage to be Paid\",\n    value: total_income.percentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"Months\",\n    onChange: e => isNumber(e) && setIncome(e, 'months'),\n    placeholder: \"Time to be Paid\",\n    value: total_income.months,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"USD\",\n    onChange: e => isNumber(e) && setIncome(e, 'maximum'),\n    placeholder: \"Maximum to be paid\",\n    value: total_income.maximum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"Weeks\",\n    onChange: e => isNumber(e) && setIncome(e, 'cancellation_period'),\n    placeholder: \"Cancellation Period\",\n    value: total_income.cancellation_period,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    withRipple: true,\n    postFix: \"%\",\n    onChange: e => isNumber(e) && setIncome(e, 'risk'),\n    placeholder: \"Risk Assessment\",\n    value: total_income.risk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }), !notValid() && /*#__PURE__*/React.createElement(IsaAssessment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  })))), selected_pricing.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: notValid(),\n    onClick: sendOffer,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"REVIEW and send offer\"))), /*#__PURE__*/React.createElement(FAQ, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Message, {\n    message: request_error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/pages/public/company/my-isa/create-isa/index.tsx"],"names":["PageHeader","PageContent","FAQ","React","useState","fixClass","isNumber","validateEmail","Input","TooltipBadge","emailErrorMessage","Button","IsaService","Message","IsaAssessment","isaService","pricing","CreateIsa","props","loading","set_loading","request_error","set_request_error","selected_pricing","set_selected_pricing","client","set_client","email","first_name","last_name","error","set_error","total_income","set_total_income","description","percentage","months","maximum","cancellation_period","risk","current_income","setIncome","e","key","notValid","Object","values","some","i","sendOffer","res","create","Number","cap","time_to_be_paid","status","coach_id","currentUser","id","setTimeout","toString","map","item","length"],"mappings":"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","sourcesContent":["import './style.scss'\nimport { ScreenProps } from '../../../../../../interfaces/baseIntefaces'\nimport PageHeader from '../../../../../modules/common/PageHeader'\nimport PageContent from '../../../../../modules/common/PageContent'\nimport FAQ from '../../../../../modules/company/CreateIsa/FAQ'\nimport React, { useState } from 'react'\nimport { fixClass, isNumber, validateEmail } from '../../../../../../helpers/base'\nimport Input from '../../../../../components/Input'\nimport TooltipBadge from '../../../../../components/TooltipBadge'\nimport { emailErrorMessage } from '../../../../../../constants/auth'\nimport Button from '../../../../../components/Button'\nimport IsaService from '../../../../../../services/isa.service'\nimport Message from '../../../../../components/Message'\nimport IsaAssessment from '../../../../../modules/common/IsaAssessment'\n\nconst isaService = new IsaService()\n\nconst pricing = ['From total income', 'From new raise', 'Placement']\n\ntype IncomeKeys = 'description' | 'percentage' | 'months' | 'maximum' | 'cancellation_period' | 'risk' | 'current_income'\ninterface CreateIsaProps extends ScreenProps {}\n\nexport default function CreateIsa(props: CreateIsaProps) {\n  const [loading, set_loading] = useState(false)\n  const [request_error, set_request_error] = useState('')\n  const [selected_pricing, set_selected_pricing] = useState(pricing[0])\n\n  const [client, set_client] = useState({\n    email: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  const [error, set_error] = useState({\n    email: '',\n    first_name: '',\n    last_name: '',\n  })\n\n  const [total_income, set_total_income] = useState({\n    description: '',\n    percentage: '',\n    months: '',\n    maximum: '',\n    cancellation_period: '',\n    risk: '',\n    current_income: '',\n  })\n\n  const setIncome = (e: string, key: IncomeKeys) => set_total_income({ ...total_income, [key]: e })\n\n  const notValid = () =>\n    Object.values(client).some(i => i === '') ||\n    Object.values(total_income).some(i => i === '') ||\n    !validateEmail(client.email)\n\n  const sendOffer = async () => {\n    set_loading(true)\n    try {\n      const res = await isaService.create({\n        current_income: Number(total_income.current_income),\n        percentage: Number(total_income.percentage),\n        cap: Number(total_income.cancellation_period),\n        time_to_be_paid: Number(total_income.months),\n        status: 'created',\n        description: total_income.description,\n        client,\n        coach_id: props.currentUser.id,\n      })\n\n      if (res && res.error) {\n        set_loading(false)\n        set_request_error(res.error)\n        return setTimeout(() => set_request_error(''), 3000)\n      }\n      set_loading(false)\n\n    } catch (e) {\n      set_loading(false)\n      set_request_error(e.error || e.toString())\n      setTimeout(() => set_request_error(''), 3000)\n    }\n  }\n\n  return (\n    <article className=\"CreateIsa-page\">\n      <PageHeader user={props.currentUser} />\n      <PageContent title=\"New ISA Offer\">\n        <section className=\"container\">\n          <section className=\"client-info\">\n            <header>\n              <h2>Client Information</h2>\n              <Input\n                withRipple\n                onChange={e => set_client({ ...client, first_name: e })}\n                value={client.first_name}\n                placeholder=\"First Name\"\n              />\n              <Input\n                withRipple\n                onChange={e => set_client({ ...client, last_name: e })}\n                value={client.last_name}\n                placeholder=\"Last Name\"\n              />\n              <Input\n                withRipple\n                className=\"email\"\n                error={error.email}\n                onChange={e => {\n                  set_error({ ...error, email: '' })\n                  set_client({ ...client, email: e })\n                  !validateEmail(e) && set_error({ ...error, email: emailErrorMessage })\n                }}\n                value={client.email}\n                placeholder=\"Email Address\"\n              />\n            </header>\n            <footer>\n              <h2>Offer Details</h2>\n              <TooltipBadge label=\"Pricing\" tooltip=\"help text\" />\n              <div className=\"selects\">\n                {pricing.map((item, i) => (\n                  <button\n                    key={i}\n                    className={`${fixClass(selected_pricing === item && 'selected')}`}\n                    onClick={() => set_selected_pricing(item)}\n                  >\n                    {item}\n                  </button>\n                ))}\n              </div>\n              <div className=\"form\">\n                <Input\n                  withRipple\n                  onChange={e => setIncome(e, 'description')}\n                  placeholder=\"Description\"\n                  value={total_income.description}\n                />\n                {selected_pricing === 'From total income' && (\n                  <>\n                    <Input\n                      withRipple\n                      postFix=\"%\"\n                      onChange={e => isNumber(e) && setIncome(e, 'current_income')}\n                      placeholder=\"Current income\"\n                      value={total_income.current_income}\n                    />\n                    <Input\n                      withRipple\n                      postFix=\"%\"\n                      onChange={e => isNumber(e) && setIncome(e, 'percentage')}\n                      placeholder=\"Percentage to be Paid\"\n                      value={total_income.percentage}\n                    />\n                    <Input\n                      withRipple\n                      postFix=\"Months\"\n                      onChange={e => isNumber(e) && setIncome(e, 'months')}\n                      placeholder=\"Time to be Paid\"\n                      value={total_income.months}\n                    />\n                    <Input\n                      withRipple\n                      postFix=\"USD\"\n                      onChange={e => isNumber(e) && setIncome(e, 'maximum')}\n                      placeholder=\"Maximum to be paid\"\n                      value={total_income.maximum}\n                    />\n                    <Input\n                      withRipple\n                      postFix=\"Weeks\"\n                      onChange={e => isNumber(e) && setIncome(e, 'cancellation_period')}\n                      placeholder=\"Cancellation Period\"\n                      value={total_income.cancellation_period}\n                    />\n                    <Input\n                      withRipple\n                      postFix=\"%\"\n                      onChange={e => isNumber(e) && setIncome(e, 'risk')}\n                      placeholder=\"Risk Assessment\"\n                      value={total_income.risk}\n                    />\n                    {!notValid() && <IsaAssessment/>}\n                  </>\n                )}\n              </div>\n            </footer>\n            {selected_pricing.length > 0 && (\n              <div className=\"actions\">\n                <Button disabled={notValid()} onClick={sendOffer} loading={loading}>\n                  REVIEW and send offer\n                </Button>\n              </div>\n            )}\n          </section>\n\n          <FAQ />\n        </section>\n      </PageContent>\n      <Message message={request_error}/>\n    </article>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}