{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/components/Button/index.tsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { SYSTEM_COLORS } from '../../../constants/system';\nimport { fixClass } from '../../../helpers/base';\nimport './style.scss';\nimport Icon from '../Icon';\nconst Btn = styled.button`\n  // @ts-ignore\n  background: ${props => SYSTEM_COLORS[props.background]};\n  color: ${props => props.color || 'white'};\n  :hover {\n    // @ts-ignore\n    background: ${props => SYSTEM_COLORS[props.background.replace('Main', 'Hover')]};\n  }\n`;\nexport default function Button(props) {\n  return /*#__PURE__*/React.createElement(Btn, {\n    className: `Button-component${fixClass(props.className)}`,\n    style: props.style,\n    onClick: props.onClick,\n    disabled: props.disabled || props.loading,\n    background: props.background || 'MainPrimary',\n    color: ['MainLight', 'MainWhite'].includes(props.background || '') ? SYSTEM_COLORS.Title : props.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, props.loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, props.children, \" \", props.icon && /*#__PURE__*/React.createElement(Icon, {\n    icon: props.icon,\n    style: {\n      marginLeft: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 43\n    }\n  })));\n}\n\nconst Loader = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lds-ring\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Button/index.tsx"],"names":["React","styled","SYSTEM_COLORS","fixClass","Icon","Btn","button","props","background","color","replace","Button","className","style","onClick","disabled","loading","includes","Title","children","icon","marginLeft","Loader"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAkC,SAAlC;AAEA,MAAMC,GAAG,GAAGJ,MAAM,CAACK,MAAY;;gBAEfC,KAAK,IAAIL,aAAa,CAACK,KAAK,CAACC,UAAP,CAAmB;WAC9CD,KAAK,IAAIA,KAAK,CAACE,KAAN,IAAe,OAAQ;;;kBAGzBF,KAAK,IAAIL,aAAa,CAACK,KAAK,CAACC,UAAN,CAAiBE,OAAjB,CAAyB,MAAzB,EAAiC,OAAjC,CAAD,CAA4C;;CANpF;AAgCA,eAAe,SAASC,MAAT,CAAgBJ,KAAhB,EAAoC;AACjD,sBACE,oBAAC,GAAD;AACE,IAAA,SAAS,EAAG,mBAAkBJ,QAAQ,CAACI,KAAK,CAACK,SAAP,CAAkB,EAD1D;AAEE,IAAA,KAAK,EAAEL,KAAK,CAACM,KAFf;AAGE,IAAA,OAAO,EAAEN,KAAK,CAACO,OAHjB;AAIE,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QAAN,IAAkBR,KAAK,CAACS,OAJpC;AAKE,IAAA,UAAU,EAAET,KAAK,CAACC,UAAN,IAAoB,aALlC;AAME,IAAA,KAAK,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2BS,QAA3B,CAAoCV,KAAK,CAACC,UAAN,IAAoB,EAAxD,IAA8DN,aAAa,CAACgB,KAA5E,GAAoFX,KAAK,CAACE,KANnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGF,KAAK,CAACS,OAAN,gBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC,0CACGT,KAAK,CAACY,QADT,OACoBZ,KAAK,CAACa,IAAN,iBAAc,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEb,KAAK,CAACa,IAAlB;AAAwB,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlC,CAXJ,CADF;AAkBD;;AAED,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CATD","sourcesContent":["import * as React from 'react'\nimport { CSSProperties } from 'react'\nimport styled from 'styled-components'\nimport { SYSTEM_COLORS } from '../../../constants/system'\nimport { fixClass } from '../../../helpers/base'\nimport './style.scss'\nimport Icon, { SystemIcons } from '../Icon'\n\nconst Btn = styled.button<any>`\n  // @ts-ignore\n  background: ${props => SYSTEM_COLORS[props.background]};\n  color: ${props => props.color || 'white'};\n  :hover {\n    // @ts-ignore\n    background: ${props => SYSTEM_COLORS[props.background.replace('Main', 'Hover')]};\n  }\n`\n\ntype ButtonBackground =\n  | 'MainPrimary'\n  | 'MainSecondary'\n  | 'MainSuccess'\n  | 'MainError'\n  | 'MainWarning'\n  | 'MainInfo'\n  | 'MainLight'\n  | 'MainWhite'\n\ninterface ButtonProps {\n  children: any\n  onClick?: any\n  className?: string\n  background?: ButtonBackground\n  color?: string\n  style?: CSSProperties\n  disabled?: boolean\n  loading?: boolean\n  icon?: SystemIcons\n}\n\nexport default function Button(props: ButtonProps) {\n  return (\n    <Btn\n      className={`Button-component${fixClass(props.className)}`}\n      style={props.style}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      background={props.background || 'MainPrimary'}\n      color={['MainLight', 'MainWhite'].includes(props.background || '') ? SYSTEM_COLORS.Title : props.color}\n    >\n      {props.loading ? (\n        <Loader />\n      ) : (\n        <>\n          {props.children} {props.icon && <Icon icon={props.icon} style={{ marginLeft: 6 }} />}\n        </>\n      )}\n    </Btn>\n  )\n}\n\nconst Loader = () => {\n  return (\n    <div className=\"lds-ring\">\n      <div />\n      <div />\n      <div />\n      <div />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}