{"ast":null,"code":"import React from'react';import{BrowserRouter as Router}from'react-router-dom';import{Route,Switch,Redirect}from'react-router';import NotFound from'./app/pages/public/404';import MyIsa from'./app/pages/public/company/my-isa';import OnBoarding from'./app/pages/public/company/on-boarding';import CreateIsa from'./app/pages/public/company/my-isa/create-isa';import SignUp from'./app/pages/public/auth/sign-up';import SignIn from'./app/pages/public/auth/sign-in';import IsaOverview from'./app/pages/public/company/my-isa/isa-overview';import ClientIsaOffer from'./app/pages/public/client/isa-offer-steps/review';import Settings from'./app/pages/public/client/settings';export default function Routes(routerProps){return/*#__PURE__*/React.createElement(Router,{basename:'/web'},/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/login\",render:function render(props){return/*#__PURE__*/React.createElement(SignIn,Object.assign({},props,routerProps));}}),/*#__PURE__*/React.createElement(Route,{path:\"/register\",render:function render(props){return/*#__PURE__*/React.createElement(SignUp,Object.assign({},props,routerProps));}}),privateRoute(MyIsa,'/my-isa',routerProps),privateRoute(CreateIsa,'/isa/create',routerProps),privateRoute(IsaOverview,'/isa/:id',routerProps),privateRoute(Settings,'/settings',routerProps),privateRoute(OnBoarding,'/on-boarding',routerProps),/*#__PURE__*/React.createElement(Route,{path:\"/client/isa-offer/:id\",render:function render(props){return/*#__PURE__*/React.createElement(ClientIsaOffer,Object.assign({},props,routerProps));}}),/*#__PURE__*/React.createElement(Redirect,{path:\"/\",to:routerProps.currentUser?'/my-isa':'/login',exact:true}),/*#__PURE__*/React.createElement(Route,{path:\"*\",render:function render(props){return/*#__PURE__*/React.createElement(NotFound,props);}})));}var privateRoute=function privateRoute(Component,route,routerProps){return/*#__PURE__*/React.createElement(Route,{path:route,render:function render(props){return routerProps.currentUser?/*#__PURE__*/React.createElement(Component,Object.assign({},props,routerProps)):/*#__PURE__*/React.createElement(Redirect,{to:'/login'});}});};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/Routes.tsx"],"names":["React","BrowserRouter","Router","Route","Switch","Redirect","NotFound","MyIsa","OnBoarding","CreateIsa","SignUp","SignIn","IsaOverview","ClientIsaOffer","Settings","Routes","routerProps","props","privateRoute","currentUser","Component","route"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,KAAwC,kBAAxC,CACA,OAASC,KAAT,CAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,cAAxC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,mCAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wCAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,8CAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,iCAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,gDAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kDAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,oCAArB,CAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,WAAhB,CAAkC,CAC/C,mBACE,oBAAC,MAAD,EAAQ,QAAQ,CAAE,MAAlB,eACE,oBAAC,MAAD,mBACE,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,MAAM,CAAE,gBAACC,KAAD,qBAAgB,oBAAC,MAAD,kBAAYA,KAAZ,CAAuBD,WAAvB,EAAhB,EAA7B,EADF,cAEE,oBAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,MAAM,CAAE,gBAACC,KAAD,qBAAgB,oBAAC,MAAD,kBAAYA,KAAZ,CAAuBD,WAAvB,EAAhB,EAAhC,EAFF,CAIGE,YAAY,CAACX,KAAD,CAAQ,SAAR,CAAmBS,WAAnB,CAJf,CAKGE,YAAY,CAACT,SAAD,CAAY,aAAZ,CAA2BO,WAA3B,CALf,CAMGE,YAAY,CAACN,WAAD,CAAc,UAAd,CAA0BI,WAA1B,CANf,CAOGE,YAAY,CAACJ,QAAD,CAAW,WAAX,CAAwBE,WAAxB,CAPf,CAQGE,YAAY,CAACV,UAAD,CAAa,cAAb,CAA6BQ,WAA7B,CARf,cAUE,oBAAC,KAAD,EAAO,IAAI,CAAC,uBAAZ,CAAoC,MAAM,CAAE,gBAACC,KAAD,qBAAgB,oBAAC,cAAD,kBAAoBA,KAApB,CAA+BD,WAA/B,EAAhB,EAA5C,EAVF,cAaE,oBAAC,QAAD,EAAU,IAAI,CAAC,GAAf,CAAmB,EAAE,CAAEA,WAAW,CAACG,WAAZ,CAA0B,SAA1B,CAAsC,QAA7D,CAAuE,KAAK,KAA5E,EAbF,cAcE,oBAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,MAAM,CAAE,gBAACF,KAAD,qBAAgB,oBAAC,QAAD,CAAcA,KAAd,CAAhB,EAAxB,EAdF,CADF,CADF,CAoBD,CAED,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACE,SAAD,CAAiBC,KAAjB,CAAgCL,WAAhC,CAA6D,CAChF,mBACE,oBAAC,KAAD,EACE,IAAI,CAAEK,KADR,CAEE,MAAM,CAAE,gBAACJ,KAAD,QACND,CAAAA,WAAW,CAACG,WAAZ,cACE,oBAAC,SAAD,kBAAeF,KAAf,CAA0BD,WAA1B,EADF,cAGE,oBAAC,QAAD,EAAU,EAAE,CAAE,QAAd,EAJI,EAFV,EADF,CAYD,CAbD","sourcesContent":["import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Route, Switch, Redirect } from 'react-router'\nimport { ScreenProps, User } from './interfaces/baseIntefaces'\nimport NotFound from './app/pages/public/404'\nimport MyIsa from './app/pages/public/company/my-isa'\nimport OnBoarding from './app/pages/public/company/on-boarding'\nimport SingleIsa from './app/pages/public/company/my-isa/single-isa'\nimport CreateIsa from './app/pages/public/company/my-isa/create-isa'\nimport SignUp from './app/pages/public/auth/sign-up'\nimport SignIn from './app/pages/public/auth/sign-in'\nimport IsaOverview from './app/pages/public/company/my-isa/isa-overview'\nimport ClientIsaOffer from './app/pages/public/client/isa-offer-steps/review'\nimport Settings from './app/pages/public/client/settings'\n\nexport default function Routes(routerProps: any) {\n  return (\n    <Router basename={'/web'}>\n      <Switch>\n        <Route path=\"/login\" render={(props: any) => <SignIn {...props} {...routerProps} />} />\n        <Route path=\"/register\" render={(props: any) => <SignUp {...props} {...routerProps} />} />\n\n        {privateRoute(MyIsa, '/my-isa', routerProps)}\n        {privateRoute(CreateIsa, '/isa/create', routerProps)}\n        {privateRoute(IsaOverview, '/isa/:id', routerProps)}\n        {privateRoute(Settings, '/settings', routerProps)}\n        {privateRoute(OnBoarding, '/on-boarding', routerProps)}\n\n        <Route path=\"/client/isa-offer/:id\" render={(props: any) => <ClientIsaOffer {...props} {...routerProps} />} />\n\n        {/*404*/}\n        <Redirect path=\"/\" to={routerProps.currentUser ? '/my-isa' : '/login'} exact />\n        <Route path=\"*\" render={(props: any) => <NotFound {...props} />} />\n      </Switch>\n    </Router>\n  )\n}\n\nconst privateRoute = (Component: any, route: string, routerProps: ScreenProps) => {\n  return (\n    <Route\n      path={route}\n      render={(props: any) =>\n        routerProps.currentUser ? (\n          <Component {...props} {...routerProps} />\n        ) : (\n          <Redirect to={'/login'} />\n        )\n      }\n    />\n  )\n}"]},"metadata":{},"sourceType":"module"}