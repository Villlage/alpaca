{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/components/Input/index.tsx\";\nimport './style.scss';\nimport React, { useState } from 'react';\nimport { fixClass } from '../../../helpers/base';\nimport Icon from '../Icon';\nexport default function Input(props) {\n  const [visible, set_visible] = useState(props.type !== 'password');\n  const rippled = !!props.value && props.withRipple;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `Input-component${fixClass(props.error && 'has-error')}${fixClass(props.className)}${fixClass(props.icon && 'with-icon')}${fixClass(rippled && 'rippled')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, rippled && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ripple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, props.placeholder), props.icon && /*#__PURE__*/React.createElement(Icon, {\n    icon: props.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    disabled: props.disabled,\n    type: visible ? 'text' : props.type || 'text',\n    onChange: e => props.onChange(e.target.value),\n    style: props.style,\n    placeholder: props.placeholder,\n    value: props.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), props.postFix && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-fix\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, props.postFix), props.type === 'password' && /*#__PURE__*/React.createElement(Icon, {\n    className: \"eye-icon\",\n    onClick: () => set_visible(!visible),\n    icon: \"eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }), props.error && props.error.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 49\n    }\n  }, props.error));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Input/index.tsx"],"names":["React","useState","fixClass","Icon","Input","props","visible","set_visible","type","rippled","value","withRipple","error","className","icon","placeholder","disabled","e","onChange","target","style","postFix","length"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,IAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,OAAOC,IAAP,MAAkC,SAAlC;AAgBA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAC/C,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBN,QAAQ,CAACI,KAAK,CAACG,IAAN,KAAe,UAAhB,CAAvC;AACA,QAAMC,OAAO,GAAG,CAAC,CAACJ,KAAK,CAACK,KAAR,IAAiBL,KAAK,CAACM,UAAvC;AACA,sBACE;AACE,IAAA,SAAS,EAAG,kBAAiBT,QAAQ,CAACG,KAAK,CAACO,KAAN,IAAe,WAAhB,CAA6B,GAAEV,QAAQ,CAACG,KAAK,CAACQ,SAAP,CAAkB,GAAEX,QAAQ,CAACG,KAAK,CAACS,IAAN,IAAc,WAAf,CAA4B,GAAEZ,QAAQ,CAACO,OAAO,IAAI,SAAZ,CAAuB,EADvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGA,OAAO,iBAAI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBJ,KAAK,CAACU,WAA/B,CAHd,EAIGV,KAAK,CAACS,IAAN,iBAAc,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAET,KAAK,CAACS,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJjB,eAKE;AACE,IAAA,QAAQ,EAAET,KAAK,CAACW,QADlB;AAEE,IAAA,IAAI,EAAEV,OAAO,GAAG,MAAH,GAAYD,KAAK,CAACG,IAAN,IAAc,MAFzC;AAGE,IAAA,QAAQ,EAAES,CAAC,IAAIZ,KAAK,CAACa,QAAN,CAAeD,CAAC,CAACE,MAAF,CAAST,KAAxB,CAHjB;AAIE,IAAA,KAAK,EAAEL,KAAK,CAACe,KAJf;AAKE,IAAA,WAAW,EAAEf,KAAK,CAACU,WALrB;AAME,IAAA,KAAK,EAAEV,KAAK,CAACK,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAaGL,KAAK,CAACgB,OAAN,iBAAiB;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BhB,KAAK,CAACgB,OAAjC,CAbpB,EAcGhB,KAAK,CAACG,IAAN,KAAe,UAAf,iBAA6B,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAA2B,IAAA,OAAO,EAAE,MAAMD,WAAW,CAAC,CAACD,OAAF,CAArD;AAAiE,IAAA,IAAI,EAAC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdhC,EAeGD,KAAK,CAACO,KAAN,IAAeP,KAAK,CAACO,KAAN,CAAYU,MAAZ,GAAqB,CAApC,iBAAyC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBjB,KAAK,CAACO,KAA5B,CAf5C,CADF;AAmBD","sourcesContent":["import './style.scss'\nimport React, { CSSProperties, useState } from 'react'\nimport { fixClass } from '../../../helpers/base'\nimport Icon, { SystemIcons } from '../Icon'\n\ninterface InputProps {\n  onChange(e: string): void\n  value: string | number\n  placeholder?: string\n  error?: string\n  className?: string\n  postFix?: string\n  icon?: SystemIcons\n  style?: CSSProperties\n  type?: string\n  disabled?: boolean\n  withRipple?: boolean\n}\n\nexport default function Input(props: InputProps) {\n  const [visible, set_visible] = useState(props.type !== 'password')\n  const rippled = !!props.value && props.withRipple\n  return (\n    <div\n      className={`Input-component${fixClass(props.error && 'has-error')}${fixClass(props.className)}${fixClass(props.icon && 'with-icon')}${fixClass(rippled && 'rippled')}`}\n    >\n      {rippled && <div className=\"ripple\">{props.placeholder}</div>}\n      {props.icon && <Icon icon={props.icon} />}\n      <input\n        disabled={props.disabled}\n        type={visible ? 'text' : props.type || 'text'}\n        onChange={e => props.onChange(e.target.value)}\n        style={props.style}\n        placeholder={props.placeholder}\n        value={props.value}\n      />\n      {props.postFix && <div className=\"post-fix\">{props.postFix}</div>}\n      {props.type === 'password' && <Icon className=\"eye-icon\" onClick={() => set_visible(!visible)} icon=\"eye\" />}\n      {props.error && props.error.length > 0 && <p className=\"error\">{props.error}</p>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}