{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/createClass\";import BaseService from'./base.service';var baseService=new BaseService();var ClientService=/*#__PURE__*/function(){function ClientService(){_classCallCheck(this,ClientService);}_createClass(ClientService,[{key:\"getOffer\",value:function(){var _getOffer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(isa_id){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return baseService.getJSON(\"client/isas/\".concat(isa_id));case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}}},_callee);}));function getOffer(_x){return _getOffer.apply(this,arguments);}return getOffer;}()}]);return ClientService;}();export{ClientService as default};","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/services/client.service.ts"],"names":["BaseService","baseService","ClientService","isa_id","getJSON"],"mappings":"mdAAA,MAAOA,CAAAA,WAAP,KAAwB,gBAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAG,GAAID,CAAAA,WAAJ,EAApB,C,GAEqBE,CAAAA,a,2OACGC,M,wIACPF,CAAAA,WAAW,CAACG,OAAZ,uBAAmCD,MAAnC,E,qOAFID,a","sourcesContent":["import BaseService from './base.service'\n\nconst baseService = new BaseService()\n\nexport default class ClientService {\n  public async getOffer(isa_id: number) {\n    return await baseService.getJSON(`client/isas/${isa_id}`)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}