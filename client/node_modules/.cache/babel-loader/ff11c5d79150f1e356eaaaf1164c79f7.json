{"ast":null,"code":"var _jsxFileName = \"/Users/gilad/code/commitmuse/client/src/app/components/Select/Select.tsx\";\nimport * as React from 'react';\nimport './style.scss';\nimport { useState } from 'react';\nimport { notEmptyArray, fixClass } from '../../../helpers/base';\nimport Icon from '../Icon';\nexport default function Select(props) {\n  const [showOptions, setShowOptions] = useState(false);\n  const isError = props.error && props.error.length > 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `Select-component${fixClass(isError && 'has-error')}${fixClass(props.disabled && 'disabled')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, props.label && /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }, props.label), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => !props.disabled && setShowOptions(!showOptions),\n    className: `placeholder ${!!props.value ? 'value' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props.value || props.placeholder, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"select_down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), showOptions && notEmptyArray(props.options) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, props.options.map((option, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: `option${fixClass(option === props.value && 'selected')}`,\n    key: index,\n    onClick: () => {\n      setShowOptions(false);\n      props.onChange(option);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, option)))), showOptions && /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setShowOptions(!showOptions),\n    className: \"overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }), isError && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, props.error));\n}","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/app/components/Select/Select.tsx"],"names":["React","useState","notEmptyArray","fixClass","Icon","Select","props","showOptions","setShowOptions","isError","error","length","disabled","label","value","placeholder","options","map","option","index","onChange"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,cAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,uBAAxC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAYA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAoC;AACjD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMQ,OAAO,GAAGH,KAAK,CAACI,KAAN,IAAeJ,KAAK,CAACI,KAAN,CAAYC,MAAZ,GAAqB,CAApD;AACA,sBACE;AAAK,IAAA,SAAS,EAAG,mBAAkBR,QAAQ,CAACM,OAAO,IAAI,WAAZ,CAAyB,GAAEN,QAAQ,CAACG,KAAK,CAACM,QAAN,IAAkB,UAAnB,CAA+B,EAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,KAAN,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,KAAK,CAACO,KAAd,CADlB,eAEE;AACE,IAAA,OAAO,EAAE,MAAM,CAACP,KAAK,CAACM,QAAP,IAAmBJ,cAAc,CAAC,CAACD,WAAF,CADlD;AAEE,IAAA,SAAS,EAAG,eAAc,CAAC,CAACD,KAAK,CAACQ,KAAR,GAAgB,OAAhB,GAA0B,EAAG,EAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGR,KAAK,CAACQ,KAAN,IAAeR,KAAK,CAACS,WAJxB,eAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGR,WAAW,IAAIL,aAAa,CAACI,KAAK,CAACU,OAAP,CAA5B,iBACC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACU,OAAN,CAAeC,GAAf,CAAmB,CAACC,MAAD,EAASC,KAAT,kBAClB;AACE,IAAA,SAAS,EAAG,SAAQhB,QAAQ,CAACe,MAAM,KAAKZ,KAAK,CAACQ,KAAjB,IAA0B,UAA3B,CAAuC,EADrE;AAEE,IAAA,GAAG,EAAEK,KAFP;AAGE,IAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,MAAAA,KAAK,CAACc,QAAN,CAAeF,MAAf;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGA,MARH,CADD,CADH,CAPJ,CAFF,EA0BGX,WAAW,iBAAI;AAAK,IAAA,OAAO,EAAE,MAAMC,cAAc,CAAC,CAACD,WAAF,CAAlC;AAAkD,IAAA,SAAS,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BlB,EA2BGE,OAAO,iBAAI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBH,KAAK,CAACI,KAA5B,CA3Bd,CADF;AA+BD","sourcesContent":["import * as React from 'react'\nimport './style.scss'\nimport { useState } from 'react'\nimport { notEmptyArray, fixClass } from '../../../helpers/base'\nimport Icon from '../Icon'\n\ninterface SelectProps {\n  value: string\n  options: string[] | null | undefined\n  onChange(option: string): void\n  placeholder: string\n  label?: string\n  error?: string\n  disabled?: boolean\n}\n\nexport default function Select(props: SelectProps) {\n  const [showOptions, setShowOptions] = useState(false)\n  const isError = props.error && props.error.length > 0\n  return (\n    <div className={`Select-component${fixClass(isError && 'has-error')}${fixClass(props.disabled && 'disabled')}`}>\n      {props.label && <label>{props.label}</label>}\n      <div\n        onClick={() => !props.disabled && setShowOptions(!showOptions)}\n        className={`placeholder ${!!props.value ? 'value' : ''}`}\n      >\n        {props.value || props.placeholder}\n        <Icon icon=\"select_down\" />\n        {showOptions && notEmptyArray(props.options) && (\n          <div className=\"options\">\n            {props.options!.map((option, index) => (\n              <div\n                className={`option${fixClass(option === props.value && 'selected')}`}\n                key={index}\n                onClick={() => {\n                  setShowOptions(false)\n                  props.onChange(option)\n                }}\n              >\n                {option}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {showOptions && <div onClick={() => setShowOptions(!showOptions)} className=\"overlay\" />}\n      {isError && <p className=\"error\">{props.error}</p>}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}