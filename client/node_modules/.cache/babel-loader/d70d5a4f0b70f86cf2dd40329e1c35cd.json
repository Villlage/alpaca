{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/gilad/code/commitmuse/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useLayoutEffect,useState}from'react';import Routes from'./Routes';import{Provider}from'react-redux';import store from'./redux/store';import UserService from'./services/user.service';import Loader from'./app/components/Loader';import{log}from'./services/logging.service';var configStore=store();var userService=new UserService();function App(){var _useState=useState(undefined),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],_setCurrentUser=_useState2[1];var fetchUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return userService.checkAuth();case 3:res=_context.sent;if(!res){_context.next=11;break;}_context.next=7;return userService.getCurrentUser();case 7:user=_context.sent;return _context.abrupt(\"return\",_setCurrentUser(user));case 11:return _context.abrupt(\"return\",_setCurrentUser(null));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);log('Error getting current user: ',_context.t0);return _context.abrupt(\"return\",_setCurrentUser(null));case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchUser(){return _ref.apply(this,arguments);};}();useLayoutEffect(function(){fetchUser();},[]);return currentUser!==undefined?/*#__PURE__*/React.createElement(Provider,{store:configStore},/*#__PURE__*/React.createElement(Routes,{currentUser:currentUser,fetchUser:fetchUser,setCurrentUser:function setCurrentUser(u){return _setCurrentUser(u);}})):/*#__PURE__*/React.createElement(Loader,null);}export default App;","map":{"version":3,"sources":["/Users/gilad/code/commitmuse/client/src/App.tsx"],"names":["React","useLayoutEffect","useState","Routes","Provider","store","UserService","Loader","log","configStore","userService","App","undefined","currentUser","setCurrentUser","fetchUser","checkAuth","res","getCurrentUser","user","u"],"mappings":"+VAAA,MAAOA,CAAAA,KAAP,EAAgBC,eAAhB,CAAiCC,QAAjC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,yBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,GAAT,KAAoB,4BAApB,CAGA,GAAMC,CAAAA,WAAgB,CAAGJ,KAAK,EAA9B,CACA,GAAMK,CAAAA,WAAW,CAAG,GAAIJ,CAAAA,WAAJ,EAApB,CAEA,QAASK,CAAAA,GAAT,EAAe,eACyBT,QAAQ,CAA0BU,SAA1B,CADjC,wCACNC,WADM,eACOC,eADP,eAEb,GAAMC,CAAAA,SAAS,0FAAG,sLAEIL,CAAAA,WAAW,CAACM,SAAZ,EAFJ,QAERC,GAFQ,mBAGVA,GAHU,gDAIOP,CAAAA,WAAW,CAACQ,cAAZ,EAJP,QAINC,IAJM,+CAKLL,eAAc,CAACK,IAAD,CALT,0CAOLL,eAAc,CAAC,IAAD,CAPT,2FAUdN,GAAG,CAAC,8BAAD,aAAH,CAVc,gCAWPM,eAAc,CAAC,IAAD,CAXP,uEAAH,kBAATC,CAAAA,SAAS,0CAAf,CAeAd,eAAe,CAAC,UAAM,CACpBc,SAAS,GACV,CAFc,CAEZ,EAFY,CAAf,CAIA,MAAOF,CAAAA,WAAW,GAAKD,SAAhB,cACL,oBAAC,QAAD,EAAU,KAAK,CAAEH,WAAjB,eACE,oBAAC,MAAD,EAAQ,WAAW,CAAEI,WAArB,CAA0C,SAAS,CAAEE,SAArD,CAAgE,cAAc,CAAE,wBAACK,CAAD,QAAoBN,CAAAA,eAAc,CAACM,CAAD,CAAlC,EAAhF,EADF,CADK,cAKL,oBAAC,MAAD,MALF,CAOD,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import React, { useLayoutEffect, useState } from 'react'\nimport Routes from './Routes'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport UserService from './services/user.service'\nimport Loader from './app/components/Loader'\nimport { log } from './services/logging.service'\nimport { User } from './interfaces/baseIntefaces'\n\nconst configStore: any = store()\nconst userService = new UserService()\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState<User | null | undefined>(undefined)\n  const fetchUser = async () => {\n    try {\n      const res = await userService.checkAuth()\n      if (res) {\n        const user = await userService.getCurrentUser()\n        return setCurrentUser(user)\n      } else {\n        return setCurrentUser(null)\n      }\n    } catch (e) {\n      log('Error getting current user: ', e)\n      return setCurrentUser(null)\n    }\n  }\n\n  useLayoutEffect(() => {\n    fetchUser()\n  }, [])\n\n  return currentUser !== undefined ? (\n    <Provider store={configStore}>\n      <Routes currentUser={currentUser as User} fetchUser={fetchUser} setCurrentUser={(u: User | null) => setCurrentUser(u)} />\n    </Provider>\n  ) : (\n    <Loader />\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}